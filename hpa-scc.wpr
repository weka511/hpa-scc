#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('download.py'),
                  loc('otsu.py'),
                  loc('README.md'),
                  loc('segmentation.py'),
                  loc('unzip.py'),
                  loc('visualize.py'),
                  loc('watershed.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('otsu.py'): ('project',
                                       (u'--show --help',
        '')),
                      loc('watershed.py'): ('project',
        (u'--n 100 --m 5 --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('otsu.py'): [u'--show --help',
        u'--show'],
                         loc('visualize.py'): [u'--image_set raw',
        u'--image_set raw image_id 000a6c98_bb9b_11e8_b2b9_ac1f6b6435d0',
        u"--image_set raw image_id '000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'",
        u'--image_set raw image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'],
                         loc('watershed.py'): [u'--n 100 --m 5 --show',
        u'--n 100 --m 2 --show',
        u'--n 100 -m 2 --show']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(6,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../astro/make_img.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [0,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'C/C++ Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'inod',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'plot_files',
                                       'fReverse': False,
                                       'fSearchText': u'process',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../bioinformatics/mgap.py'),
        {'attrib-starts': [],
         'code-line': '    elapsed = time.time() - start\r\n',
         'first-line': 97L,
         'folded-linenos': [],
         'sel-line': 101L,
         'sel-line-start': 3997L,
         'selection_end': 4155L,
         'selection_start': 3997L,
         'zoom': 0L},
        1612148899.447],
        [loc('watershed.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--m',         type=int, def"\
                       "ault = 32)\r\n",
          'first-line': 150L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 5996L,
          'selection_end': 6045L,
          'selection_start': 6045L,
          'zoom': 0L},
         1612149463.904],
        [loc('../bioinformatics/mgap.py'),
         {'attrib-starts': [],
          'code-line': '    elapsed = time.time() - start\r\n',
          'first-line': 97L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3997L,
          'selection_end': 4155L,
          'selection_start': 3997L,
          'zoom': 0L},
         1612149466.014],
        [loc('watershed.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--m',         type=int, def"\
                       "ault = 32)\r\n",
          'first-line': 150L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 5996L,
          'selection_end': 6045L,
          'selection_start': 6045L,
          'zoom': 0L},
         1612149467.014],
        [loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
         {'attrib-starts': [('Signature|0|',
                             2729),
                            ('Signature|0|._bind|0|',
                             2888)],
          'code-line': '                        raise TypeError(\r\n',
          'first-line': 2944L,
          'folded-linenos': [],
          'sel-line': 2963L,
          'sel-line-start': 113758L,
          'selection_end': 113758L,
          'selection_start': 113758L,
          'zoom': 0L},
         1612149475.306],
        [loc('watershed.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--image_set',           def"\
                       "ault = 'train512512')\r\n",
          'first-line': 149L,
          'folded-linenos': [],
          'sel-line': 159L,
          'sel-line-start': 5794L,
          'selection_end': 5867L,
          'selection_start': 5867L,
          'zoom': 0L},
         1612150350.606],
        [loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'),
         {'attrib-starts': [('_ActionsContainer|0|',
                             1252),
                            ('_ActionsContainer|0|.add_argument|0|',
                             1336)],
          'code-line': "            raise ValueError('unknown action \"%s\""\
                       "' % (action_class,))\r\n",
          'first-line': 1347L,
          'folded-linenos': [],
          'sel-line': 1366L,
          'sel-line-start': 49628L,
          'selection_end': 49628L,
          'selection_start': 49628L,
          'zoom': 0L},
         1612150357.406],
        [loc('watershed.py'),
         {'attrib-starts': [],
          'code-line': '    \r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 166L,
          'sel-line-start': 6224L,
          'selection_end': 6228L,
          'selection_start': 6228L,
          'zoom': 0L},
         1612163817.001],
        [loc('download.py'),
         {'attrib-starts': [],
          'code-line': 'import os \r\n',
          'first-line': 21L,
          'folded-linenos': [],
          'sel-line': 18L,
          'sel-line-start': 819L,
          'selection_end': 829L,
          'selection_start': 829L,
          'zoom': 0L},
         1612167417.315],
        [loc('otsu.py'),
         {'attrib-starts': [],
          'code-line': 'Descriptions = [\r\n',
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 26L,
          'sel-line-start': 1113L,
          'selection_end': 1125L,
          'selection_start': 1113L,
          'zoom': 0L},
         1612167519.785],
        [loc('README.md'),
         {'attrib-starts': [],
          'code-line': "|otsu.py|Otsu's method|\r\n",
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 11L,
          'sel-line-start': 435L,
          'selection_end': 457L,
          'selection_start': 457L,
          'zoom': 0L},
         1612167585.635],
        [loc('otsu.py'),
         {'attrib-starts': [],
          'code-line': "    parser.add_argument('--image_id',            def"\
                       "ault = '5c27f04c-bb99-11e8-b2b9-ac1f6b6435d0')\r\n",
          'first-line': 124L,
          'folded-linenos': [],
          'sel-line': 140L,
          'sel-line-start': 5064L,
          'selection_end': 5162L,
          'selection_start': 5162L,
          'zoom': 0L},
         1612167695.142],
        [loc('segmentation.py'),
         {'attrib-starts': [],
          'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+"\
                       "')\r\n",
          'first-line': 103L,
          'folded-linenos': [],
          'sel-line': 124L,
          'sel-line-start': 4338L,
          'selection_end': 4370L,
          'selection_start': 4370L,
          'zoom': 0L},
         1612167701.822],
        [loc('otsu.py'),
         {'attrib-starts': [],
          'code-line': '    axs[0,1].hist(Image)\r\n',
          'first-line': 113L,
          'folded-linenos': [],
          'sel-line': 124L,
          'sel-line-start': 4334L,
          'selection_end': 4357L,
          'selection_start': 4357L,
          'zoom': 0L},
         1612168136.313],
        [loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'),
         {'attrib-starts': [('_reshape_2D|0|',
                             1332)],
          'code-line': "            raise ValueError(f'{name} must have 2 or"\
                       " fewer dimensions')\n",
          'first-line': 1351L,
          'folded-linenos': [],
          'sel-line': 1356L,
          'sel-line-start': 44072L,
          'selection_end': 44072L,
          'selection_start': 44072L,
          'zoom': 0L},
         1612168145.303],
        [loc('otsu.py'),
         {'attrib-starts': [],
          'code-line': '    Blues = [blue for _,_,blue in [Image[i,j] for i '\
                       'in range(nx) for j in range(ny)]]\r\n',
          'first-line': 113L,
          'folded-linenos': [],
          'sel-line': 123L,
          'sel-line-start': 4328L,
          'selection_end': 4328L,
          'selection_start': 4328L,
          'zoom': 0L},
         1612168276.354],
        [loc('segmentation.py'),
         {'attrib-starts': [],
          'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+"\
                       "')\r\n",
          'first-line': 106L,
          'folded-linenos': [],
          'sel-line': 124L,
          'sel-line-start': 4338L,
          'selection_end': 4370L,
          'selection_start': 4370L,
          'zoom': 0L},
         1612168292.814],
        [loc('watershed.py'),
         {'attrib-starts': [],
          'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited'\
                       '\r\n',
          'first-line': 121L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 0L,
          'selection_start': 0L,
          'zoom': 0L},
         1612168317.554],
        [loc('otsu.py'),
         {'attrib-starts': [],
          'code-line': '    threshold_mid,icv_mid=otsu(Image,nx,ny)\r\n',
          'first-line': 132L,
          'folded-linenos': [],
          'sel-line': 148L,
          'sel-line-start': 5346L,
          'selection_end': 5376L,
          'selection_start': 5372L,
          'zoom': 0L},
         1612170248.591],
        [loc('otsu.py'),
         {'attrib-starts': [('otsu|0|',
                             100)],
          'code-line': '    icv1       = get_icv(threshold1)\r\n',
          'first-line': 97L,
          'folded-linenos': [],
          'sel-line': 111L,
          'sel-line-start': 3811L,
          'selection_end': 3835L,
          'selection_start': 3828L,
          'zoom': 0L},
         1612170596.323],
        (loc('otsu.py'),
         {'attrib-starts': [('otsu|0|',
                             100),
                            ('otsu|0|.get_icv|0|',
                             101)],
          'code-line': '    def get_icv(threshold):\r\n',
          'first-line': 89L,
          'folded-linenos': [],
          'sel-line': 101L,
          'sel-line-start': 3376L,
          'selection_end': 3391L,
          'selection_start': 3384L,
          'zoom': 0L},
         1612170605.324)],
        19),
        'current-loc': loc('otsu.py'),
        'editor-state-list': [(loc('download.py'),
                               {'attrib-starts': [],
                                'code-line': 'import os \r\n',
                                'first-line': 21L,
                                'folded-linenos': [],
                                'sel-line': 18L,
                                'sel-line-start': 819L,
                                'selection_end': 829L,
                                'selection_start': 829L,
                                'zoom': 0L}),
                              (loc('otsu.py'),
                               {'attrib-starts': [],
                                'code-line': "    parser = ArgumentParser('S"\
        "egment HPA data using Otsu\\'s algorithm')\r\n",
                                'first-line': 149L,
                                'folded-linenos': [],
                                'sel-line': 130L,
                                'sel-line-start': 4431L,
                                'selection_end': 4488L,
                                'selection_start': 4488L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': "|otsu.py|Otsu's method|\r\n",
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 11L,
                                'sel-line-start': 435L,
                                'selection_end': 457L,
                                'selection_start': 457L,
                                'zoom': 0L}),
                              (loc('segmentation.py'),
                               {'attrib-starts': [],
                                'code-line': "    axs[0,1].scatter(y, x, s=1"\
        "00, c='red', marker='+')\r\n",
                                'first-line': 106L,
                                'folded-linenos': [],
                                'sel-line': 124L,
                                'sel-line-start': 4338L,
                                'selection_end': 4370L,
                                'selection_start': 4370L,
                                'zoom': 0L}),
                              (loc('watershed.py'),
                               {'attrib-starts': [],
                                'code-line': '#   Copyright (C) 2021 Greenwe'\
        'aves Software Limited\r\n',
                                'first-line': 121L,
                                'folded-linenos': [],
                                'sel-line': 0L,
                                'sel-line-start': 0L,
                                'selection_end': 0L,
                                'selection_start': 0L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('download.py'),
         loc('otsu.py'),
         loc('README.md'),
         loc('segmentation.py'),
         loc('watershed.py')]),
                               'open_files': [u'download.py',
        u'README.md',
        u'segmentation.py',
        u'watershed.py',
        u'otsu.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1612171111.293),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1612163812.004),
                 'user_data': {}},
        'window-alloc': (1,
                         1,
                         1378,
                         749)}]}
guimgr.recent-documents = [loc('otsu.py'),
                           loc('watershed.py'),
                           loc('segmentation.py'),
                           loc('README.md'),
                           loc('download.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/api/kaggle_api_extended.py'): {'a'\
        'ttrib-starts': [('KaggleApi|0|',
                          83),
                         ('KaggleApi|0|.authenticate|0|',
                          145)],
        'code-line': "                raise IOError('Could not find {}. Make"\
                     " sure it\\'s located in'\r\n",
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 163L,
        'sel-line-start': 6179L,
        'selection_end': 6179L,
        'selection_start': 6179L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/rest.py'): {'a'\
        'ttrib-starts': [('RESTClientObject|0|',
                          68),
                         ('RESTClientObject|0|.request|0|',
                          123)],
        'code-line': '            raise ApiException(http_resp=r)\r\n',
        'first-line': 221L,
        'folded-linenos': [],
        'sel-line': 240L,
        'sel-line-start': 9657L,
        'selection_end': 9657L,
        'selection_start': 9657L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/zipfile.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1336)],
        'code-line': "            raise ValueError('unknown action \"%s\"' %"\
                     " (action_class,))\r\n",
        'first-line': 1347L,
        'folded-linenos': [],
        'sel-line': 1366L,
        'sel-line-start': 49628L,
        'selection_end': 49628L,
        'selection_start': 49628L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'a'\
        'ttrib-starts': [('Signature|0|',
                          2729),
                         ('Signature|0|._bind|0|',
                          2888)],
        'code-line': '                        raise TypeError(\r\n',
        'first-line': 2944L,
        'folded-linenos': [],
        'sel-line': 2963L,
        'sel-line-start': 113758L,
        'selection_end': 113758L,
        'selection_start': 113758L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\n',
        'first-line': 976L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 32162L,
        'selection_end': 32162L,
        'selection_start': 32162L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'): {'a'\
        'ttrib-starts': [('_reshape_2D|0|',
                          1332)],
        'code-line': "            raise ValueError(f'{name} must have 2 or f"\
                     "ewer dimensions')\n",
        'first-line': 1351L,
        'folded-linenos': [],
        'sel-line': 1356L,
        'sel-line-start': 44072L,
        'selection_end': 44072L,
        'selection_start': 44072L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/deprecation.py'): {'a'\
        'ttrib-starts': [('_make_keyword_only|0|',
                          415),
                         ('_make_keyword_only|0|.wrapper|0|',
                          439)],
        'code-line': '        return func(*args, **kwargs)\n',
        'first-line': 431L,
        'folded-linenos': [],
        'sel-line': 450L,
        'sel-line-start': 17289L,
        'selection_end': 17289L,
        'selection_start': 17289L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_ImageBase|0|',
                          215),
                         ('_ImageBase|0|.set_data|0|',
                          680)],
        'code-line': '            raise TypeError("Invalid shape {} for imag'\
                     'e data"\n',
        'first-line': 686L,
        'folded-linenos': [],
        'sel-line': 705L,
        'sel-line-start': 28475L,
        'selection_end': 28475L,
        'selection_start': 28475L,
        'zoom': 0L},
                       loc('../bioinformatics/mgap.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time() - start\r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3997L,
        'selection_end': 4155L,
        'selection_start': 3997L,
        'zoom': 0L},
                       loc('README.markdown'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '|segmentation.py|Segment cells|\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 412L,
        'selection_end': 442L,
        'selection_start': 442L,
        'zoom': 0L},
                       loc('download.py'): {'attrib-starts': [],
        'code-line': 'import os \r\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 819L,
        'selection_end': 829L,
        'selection_start': 829L,
        'zoom': 0L},
                       loc('segmentation.py'): {'attrib-starts': [],
        'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+')"\
                     "\r\n",
        'first-line': 103L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4338L,
        'selection_end': 4370L,
        'selection_start': 4370L,
        'zoom': 0L},
                       loc('unzip.py'): {'attrib-starts': [],
        'code-line': '#  To contact me, Simon Crase, email simon@greenweaves'\
                     '.nz\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 743L,
        'selection_end': 746L,
        'selection_start': 746L,
        'zoom': 0L},
                       loc('visualize.py'): {'attrib-starts': [],
        'code-line': "    jet = cm.get_cmap('jet')\r\n",
        'first-line': 124L,
        'folded-linenos': [],
        'sel-line': 128L,
        'sel-line-start': 4389L,
        'selection_end': 4608L,
        'selection_start': 4389L,
        'zoom': 0L},
                       loc('../../bioinformatics/osym.py'): {'attrib-starts': [],
        'code-line': '#   the Free Software Foundation, either version 3 of '\
                     'the License, or\r\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 208L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L}}

#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('download.py'),
                  loc('README.md'),
                  loc('segment.py'),
                  loc('summarize.py'),
                  loc('unzip.py'),
                  loc('visualize.py'),
                  loc('watershed.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('otsu.py'): ('project',
                                       (u'--show ',
        '')),
                      loc('segment.py'): ('project',
        (u'--show\n',
         '')),
                      loc('watershed.py'): ('project',
        (u'--n 100 --m 5 --show',
         ''))}
[user attributes]
debug.recent-run-args = {loc('otsu.py'): [u'--show ',
        u'--show --image_id 5c1a898e-bb99-11e8-b2b9-ac1f6b6435d0 --image_set raw',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0_blue',
        u'--show --help',
        u'--show'],
                         loc('segment.py'): [u'--show\n',
        u'--sample 2\n',
        u'--image_id 854657d2-bbaa-11e8-b2ba-ac1f6b6435d0 --show\n',
        u'--help\n',
        u'--sample 3',
        u'--show',
        u'--all'],
                         loc('visualize.py'): [u'--image_set raw',
        u'--image_set raw image_id 000a6c98_bb9b_11e8_b2b9_ac1f6b6435d0',
        u"--image_set raw image_id '000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'",
        u'--image_set raw image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'],
                         loc('watershed.py'): [u'--n 100 --m 5 --show',
        u'--n 100 --m 2 --show',
        u'--n 100 -m 2 --show']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [None],
                           'top-node': None},
        loc('segment.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('function def',
        loc('segment.py'),
        'anchor_components')]],
                            'top-node': [('function def',
        loc('segment.py'),
        'anchor_components')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'C/C++ Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'inod',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'DESCRIPTIONS',
                                       'fReverse': False,
                                       'fSearchText': u'Descriptions',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 19L,
                       'folded-linenos': [],
                       'history': {None: ['import sys\n',
        'sys.float_info()\n',
        'sys.float_info\n',
        'sys.float_info.max\n',
        'import numpy\n',
        'import math\n',
        'math.isqrt(12)\n',
        '13//3\n',
        '13%3\n',
        'import csv\n']},
                       'launch-id': None,
                       'sel-line': 24L,
                       'sel-line-start': 1169L,
                       'selection_end': 1169L,
                       'selection_start': 1169L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('segment.py'),
        {'attrib-starts': [('segment_channel|0|',
                            265)],
         'code-line': "    fig.suptitle(f'{\"+\".join([Descriptions[label] f"\
                      "or label in Training[image_id]])  }')\r\n",
         'first-line': 311L,
         'folded-linenos': [],
         'sel-line': 327L,
         'sel-line-start': 11024L,
         'selection_end': 11100L,
         'selection_start': 11096L,
         'zoom': 0L},
        1612464710.172],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    fig.suptitle(f'{\"+\".join([Descriptions[label] "\
                       "for label in Training[image_id]])  }')\r\n",
          'first-line': 311L,
          'folded-linenos': [],
          'sel-line': 327L,
          'sel-line-start': 11024L,
          'selection_end': 11099L,
          'selection_start': 11096L,
          'zoom': 0L},
         1612464710.393],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': '    axs[0,1].imshow(Partitioned) \r\n',
          'first-line': 302L,
          'folded-linenos': [],
          'sel-line': 307L,
          'sel-line-start': 10184L,
          'selection_end': 10199L,
          'selection_start': 10197L,
          'zoom': 0L},
         1612464710.609],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    axs[1,0].set_title('Intra-class variance')\r\n",
          'first-line': 283L,
          'folded-linenos': [],
          'sel-line': 288L,
          'sel-line-start': 9411L,
          'selection_end': 9430L,
          'selection_start': 9429L,
          'zoom': 0L},
         1612464719.448],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': "IMAGE_LEVEL_LABELS    = ['Microtubules', 'Protein/an"\
                       "tibody', 'Nuclei channels', 'Endoplasmic reticulum c"\
                       "hannels']\r\n",
          'first-line': 58L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2075L,
          'selection_end': 2093L,
          'selection_start': 2075L,
          'zoom': 0L},
         1612464738.145],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': '    plot_hist(n,bins,axs=axs[1,1],title=IMAGE_LEVEL_'\
                       'LABELS[channel],channel=channel)\r\n',
          'first-line': 269L,
          'folded-linenos': [],
          'sel-line': 285L,
          'sel-line-start': 9281L,
          'selection_end': 9339L,
          'selection_start': 9339L,
          'zoom': 0L},
         1612464739.644],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': "colours     = ['red',  'green', 'blue', 'yellow']\r"\
                       "\n",
          'first-line': 48L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2024L,
          'selection_end': 2031L,
          'selection_start': 2024L,
          'zoom': 0L},
         1612464762.66],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    fig.savefig(join(figs,f'{image_id}_{colours[chan"\
                       "nel]}.png'))\r\n",
          'first-line': 313L,
          'folded-linenos': [],
          'sel-line': 329L,
          'sel-line-start': 11136L,
          'selection_end': 11183L,
          'selection_start': 11176L,
          'zoom': 0L},
         1612464779.834],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': "colours     = ['red',  'green', 'blue', 'yellow']\r"\
                       "\n",
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2024L,
          'selection_end': 2031L,
          'selection_start': 2024L,
          'zoom': 0L},
         1612464781.103],
        [loc('segment.py'),
         {'attrib-starts': [('read_image|0|',
                             83)],
          'code-line': "                                 f'{image_id}_{colou"\
                       "rs[channel]}.png'))\r\n",
          'first-line': 74L,
          'folded-linenos': [],
          'sel-line': 90L,
          'sel-line-start': 2986L,
          'selection_end': 3040L,
          'selection_start': 3033L,
          'zoom': 0L},
         1612464783.082],
        [loc('segment.py'),
         {'attrib-starts': [('plot_hist|0|',
                             124)],
          'code-line': '            color = colours[channel][0])\r\n',
          'first-line': 113L,
          'folded-linenos': [],
          'sel-line': 129L,
          'sel-line-start': 4045L,
          'selection_end': 4072L,
          'selection_start': 4065L,
          'zoom': 0L},
         1612464785.055],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    fig.savefig(join(figs,f'{image_id}_{colours[chan"\
                       "nel]}.png'))\r\n",
          'first-line': 313L,
          'folded-linenos': [],
          'sel-line': 329L,
          'sel-line-start': 11136L,
          'selection_end': 11183L,
          'selection_start': 11176L,
          'zoom': 0L},
         1612464786.131],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': "colours     = ['red',  'green', 'blue', 'yellow']\r"\
                       "\n",
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2024L,
          'selection_end': 2031L,
          'selection_start': 2024L,
          'zoom': 0L},
         1612464787.647],
        [loc('segment.py'),
         {'attrib-starts': [('read_image|0|',
                             83)],
          'code-line': "                                 f'{image_id}_{COLOU"\
                       "R_NAMES[channel]}.png'))\r\n",
          'first-line': 74L,
          'folded-linenos': [],
          'sel-line': 90L,
          'sel-line-start': 2986L,
          'selection_end': 3045L,
          'selection_start': 3033L,
          'zoom': 0L},
         1612464822.699],
        [loc('segment.py'),
         {'attrib-starts': [('plot_hist|0|',
                             124)],
          'code-line': '            color = COLOUR_NAMES[channel][0])\r\n',
          'first-line': 113L,
          'folded-linenos': [],
          'sel-line': 129L,
          'sel-line-start': 4050L,
          'selection_end': 4082L,
          'selection_start': 4070L,
          'zoom': 0L},
         1612464824.574],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    fig.savefig(join(figs,f'{image_id}_{COLOUR_NAMES"\
                       "[channel]}.png'))\r\n",
          'first-line': 313L,
          'folded-linenos': [],
          'sel-line': 329L,
          'sel-line-start': 11146L,
          'selection_end': 11198L,
          'selection_start': 11186L,
          'zoom': 0L},
         1612464826.381],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': "COLOUR_NAMES     = ['red',  'green', 'blue', 'yellow"\
                       "']\r\n",
          'first-line': 57L,
          'folded-linenos': [],
          'sel-line': 62L,
          'sel-line-start': 2024L,
          'selection_end': 2036L,
          'selection_start': 2036L,
          'zoom': 0L},
         1612464828.29],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': 'Descriptions = [\r\n',
          'first-line': 27L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 1436L,
          'selection_end': 1448L,
          'selection_start': 1436L,
          'zoom': 0L},
         1612464862.56],
        [loc('segment.py'),
         {'attrib-starts': [('segment_channel|0|',
                             265)],
          'code-line': "    fig.suptitle(f'{\"+\".join([DESCRIPTIONS[label] "\
                       "for label in Training[image_id]])  }')\r\n",
          'first-line': 311L,
          'folded-linenos': [],
          'sel-line': 327L,
          'sel-line-start': 11059L,
          'selection_end': 11101L,
          'selection_start': 11089L,
          'zoom': 0L},
         1612464879.954],
        [loc('segment.py'),
         {'attrib-starts': [],
          'code-line': 'DESCRIPTIONS = [\r\n',
          'first-line': 28L,
          'folded-linenos': [],
          'sel-line': 33L,
          'sel-line-start': 1436L,
          'selection_end': 1448L,
          'selection_start': 1448L,
          'zoom': 0L},
         1612464880.943]],
        20),
        'current-loc': loc('segment.py'),
        'editor-state-list': [(loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                               {'attrib-starts': [('_ImageBase|0|',
        215),
        ('_ImageBase|0|.set_data|0|',
         680)],
                                'code-line': '            raise TypeError("I'\
        'nvalid shape {} for image data"\n',
                                'first-line': 686L,
                                'folded-linenos': [],
                                'sel-line': 705L,
                                'sel-line-start': 28475L,
                                'selection_end': 28475L,
                                'selection_start': 28475L,
                                'zoom': 0L}),
                              (loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                               {'attrib-starts': [('ImageFile|0|',
        86),
        ('ImageFile|0|.__init__|0|',
         89)],
                                'code-line': '            self.fp = open(fp,'\
        ' "rb")\n',
                                'first-line': 85L,
                                'folded-linenos': [],
                                'sel-line': 104L,
                                'sel-line-start': 2471L,
                                'selection_end': 2471L,
                                'selection_start': 2471L,
                                'zoom': 0L}),
                              (loc('README.md'),
                               {'attrib-starts': [],
                                'code-line': "|segment.py|Segment images usi"\
        "ng Otsu's method|\r\n",
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 8L,
                                'sel-line-start': 305L,
                                'selection_end': 351L,
                                'selection_start': 317L,
                                'zoom': 0L}),
                              (loc('segment.py'),
                               {'attrib-starts': [],
                                'code-line': '\r\n',
                                'first-line': 440L,
                                'folded-linenos': [],
                                'sel-line': 94L,
                                'sel-line-start': 3238L,
                                'selection_end': 3238L,
                                'selection_start': 3238L,
                                'zoom': 0L}),
                              (loc('visualize.py'),
                               {'attrib-starts': [],
                                'code-line': '    axs[0,0].imshow(create_sel'\
        'ection(Image))\r\n',
                                'first-line': 30L,
                                'folded-linenos': [],
                                'sel-line': 110L,
                                'sel-line-start': 3771L,
                                'selection_end': 3815L,
                                'selection_start': 3815L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
         loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
         loc('README.md'),
         loc('segment.py'),
         loc('visualize.py')]),
                               'open_files': [u'visualize.py',
        u'README.md',
        u'segment.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1612465283.317),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1612463936.347),
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         1366,
                         738)}]}
guimgr.recent-documents = [loc('segment.py'),
                           loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                           loc('README.md'),
                           loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                           loc('visualize.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/api/kaggle_api_extended.py'): {'a'\
        'ttrib-starts': [('KaggleApi|0|',
                          83),
                         ('KaggleApi|0|.authenticate|0|',
                          145)],
        'code-line': "                raise IOError('Could not find {}. Make"\
                     " sure it\\'s located in'\r\n",
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 163L,
        'sel-line-start': 6179L,
        'selection_end': 6179L,
        'selection_start': 6179L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/rest.py'): {'a'\
        'ttrib-starts': [('RESTClientObject|0|',
                          68),
                         ('RESTClientObject|0|.request|0|',
                          123)],
        'code-line': '            raise ApiException(http_resp=r)\r\n',
        'first-line': 221L,
        'folded-linenos': [],
        'sel-line': 240L,
        'sel-line-start': 9657L,
        'selection_end': 9657L,
        'selection_start': 9657L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/zipfile.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1336)],
        'code-line': "            raise ValueError('unknown action \"%s\"' %"\
                     " (action_class,))\r\n",
        'first-line': 1347L,
        'folded-linenos': [],
        'sel-line': 1366L,
        'sel-line-start': 49628L,
        'selection_end': 49628L,
        'selection_start': 49628L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'a'\
        'ttrib-starts': [('Signature|0|',
                          2729),
                         ('Signature|0|._bind|0|',
                          2888)],
        'code-line': '                        raise TypeError(\r\n',
        'first-line': 2944L,
        'folded-linenos': [],
        'sel-line': 2963L,
        'sel-line-start': 113758L,
        'selection_end': 113758L,
        'selection_start': 113758L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'a'\
        'ttrib-starts': [('ImageFile|0|',
                          86),
                         ('ImageFile|0|.__init__|0|',
                          89)],
        'code-line': '            self.fp = open(fp, "rb")\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2471L,
        'selection_end': 2471L,
        'selection_start': 2471L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\n',
        'first-line': 976L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 32162L,
        'selection_end': 32162L,
        'selection_start': 32162L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'): {'a'\
        'ttrib-starts': [('_reshape_2D|0|',
                          1332)],
        'code-line': "            raise ValueError(f'{name} must have 2 or f"\
                     "ewer dimensions')\n",
        'first-line': 1351L,
        'folded-linenos': [],
        'sel-line': 1356L,
        'sel-line-start': 44072L,
        'selection_end': 44072L,
        'selection_start': 44072L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/deprecation.py'): {'a'\
        'ttrib-starts': [('_make_keyword_only|0|',
                          415),
                         ('_make_keyword_only|0|.wrapper|0|',
                          439)],
        'code-line': '        return func(*args, **kwargs)\n',
        'first-line': 431L,
        'folded-linenos': [],
        'sel-line': 450L,
        'sel-line-start': 17289L,
        'selection_end': 17289L,
        'selection_start': 17289L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_ImageBase|0|',
                          215),
                         ('_ImageBase|0|.set_data|0|',
                          680)],
        'code-line': '            raise TypeError("Invalid shape {} for imag'\
                     'e data"\n',
        'first-line': 686L,
        'folded-linenos': [],
        'sel-line': 705L,
        'sel-line-start': 28475L,
        'selection_end': 28475L,
        'selection_start': 28475L,
        'zoom': 0L},
                       loc('../bioinformatics/mgap.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time() - start\r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3997L,
        'selection_end': 4155L,
        'selection_start': 3997L,
        'zoom': 0L},
                       loc('README.markdown'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('download.py'): {'attrib-starts': [],
        'code-line': 'import os \r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 819L,
        'selection_end': 829L,
        'selection_start': 829L,
        'zoom': 0L},
                       loc('otsu.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('segmentation.py'): {'attrib-starts': [],
        'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+')"\
                     "\r\n",
        'first-line': 106L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4338L,
        'selection_end': 4370L,
        'selection_start': 4370L,
        'zoom': 0L},
                       loc('summarize.py'): {'attrib-starts': [('read_traini'\
        'ng_expectations|0|',
        45)],
        'code-line': '\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1836L,
        'selection_end': 1836L,
        'selection_start': 1836L,
        'zoom': 0L},
                       loc('unzip.py'): {'attrib-starts': [],
        'code-line': '#  To contact me, Simon Crase, email simon@greenweaves'\
                     '.nz\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 743L,
        'selection_end': 746L,
        'selection_start': 746L,
        'zoom': 0L},
                       loc('visualize.py'): {'attrib-starts': [('read_image|'\
        '0|',
        66)],
        'code-line': "               image_set   = 'train512x512',\r\n",
        'first-line': 59L,
        'folded-linenos': [],
        'sel-line': 67L,
        'sel-line-start': 2164L,
        'selection_end': 2203L,
        'selection_start': 2203L,
        'zoom': 0L},
                       loc('watershed.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 121L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../bioinformatics/osym.py'): {'attrib-starts': [],
        'code-line': '#   the Free Software Foundation, either version 3 of '\
                     'the License, or\r\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 208L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L}}
search.replace-history = [u'DESCRIPTIONS',
                          u'COLOUR_NAMES',
                          u'colours',
                          u'IMAGE_LEVEL_LABELS',
                          u'NRGB',
                          u'NCHANNELS',
                          u'segment_channel',
                          u'channel',
                          u'intensity',
                          u'Intensities',
                          u'Component',
                          u'get8components',
                          u'component_file',
                          u'cluster',
                          u'get_contours']
search.search-history = [u'Descriptions',
                         u'colours',
                         u'meanings',
                         u'labels',
                         u'label',
                         u'3',
                         u'4',
                         u'segment1',
                         u'index',
                         u'BLUE',
                         u'blue',
                         u'Blues',
                         u'hist',
                         u'Contour',
                         u'get_contours',
                         u'contour_file',
                         u'component_file',
                         u'contour',
                         u'remove_false_findings']

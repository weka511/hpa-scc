#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('analyze-labels.py'),
                  loc('CellSegmentatorTest.py'),
                  loc('census.py'),
                  loc('dirichlet.py'),
                  loc('download.py'),
                  loc('encoding.py'),
                  loc('hpascc.py'),
                  loc('logs.py'),
                  loc('otsu.py'),
                  loc('README.md'),
                  loc('segment.py'),
                  loc('select_images.py'),
                  loc('slice2.py'),
                  loc('slice.py'),
                  loc('spike2.py'),
                  loc('spike3.py'),
                  loc('spike4.py'),
                  loc('spike5.py'),
                  loc('spike6.py'),
                  loc('spike7.py'),
                  loc('split.py'),
                  loc('summarize.py'),
                  loc('train2.py'),
                  loc('train.py'),
                  loc('unzip.py'),
                  loc('utils.py'),
                  loc('visualize.py'),
                  loc('vizcnn.py'),
                  loc('watershed.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('analyze-labels.py'): ('project',
        (u'--n 2',
         '')),
                      loc('dirichlet.py'): ('project',
        (u'--show',
         '')),
                      loc('logs.py'): ('project',
                                       (u'--logfiles train6.csv dropout2.csv --notall',
        '')),
                      loc('otsu.py'): ('project',
                                       (u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue',
        '')),
                      loc('segment.py'): ('project',
        (u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0',
         '')),
                      loc('segment2.py'): ('project',
        (u'--show --classes 2 6  --sample 10',
         '')),
                      loc('select_images.py'): ('project',
        (u'--N 2',
         '')),
                      loc('slice.py'): ('project',
        (u'--output dummy --validation dummy',
         '')),
                      loc('spike2.py'): ('project',
        (u'--help',
         '')),
                      loc('train.py'): ('project',
        (u'train --restart chk10.pth',
         '')),
                      loc('train1.py'): ('project',
        (u'--freq 2',
         '')),
                      loc('train2.py'): ('project',
        (u'train train --checkpoint foo --model simple3 --prefix foo',
         '')),
                      loc('visualize.py'): ('project',
        (u'--show --image_id 5c27f04c-bb99-11e8-b2b9-ac1f6b6435d0 --multiple',
         '')),
                      loc('watershed.py'): ('project',
        (u'--n 100 --m 5 --show',
         '')),
                      loc('../learn/torch-nn.py'): ('project',
        (u'--n 2',
         ''))}
[user attributes]
debug.breakpoints = {loc('select.py'): {60L: (0,
        None,
        1,
        0),
        66L: (0,
              None,
              1,
              0)},
                     loc('spike5.py'): {31L: (0,
        None,
        1,
        0)}}
debug.exceptions-ignored = {loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {15: True}}
debug.recent-run-args = {loc('analyze-labels.py'): [u'--n 2',
        u'--classes 1 2 3 6',
        u'--classes all'],
                         loc('dirichlet.py'): [u'--show',
        u'--worklist worklist',
        u'--sample 2 --labels 18',
        u'--sample 10 --labels 18',
        u'--sample 2',
        u'--samples 2',
        u'--all --negative',
        u'--sample 250 --negative',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 7800',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 7500',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 7900',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 8000',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 7000',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 6000',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 4096',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 512',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 1000',
        u'--show --image_id 0a7e47d2-bbb2-11e8-b2ba-ac1f6b6435d0  --Lambda 4000',
        u'--show --image_id 0ab3efe8-bbb9-11e8-b2ba-ac1f6b6435d0  --Lambda 4000',
        u'--show --image_id 0ab3efe8-bbb9-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id 0ab3efe8-bbb9-11e8-b2ba-ac1f6b6435d0_dirichlet',
        u'--show --sample 3 --singleton',
        u'--show --sample 3',
        u'--show --sample 1',
        u'--show --image_id 6d8e07a6-bbba-11e8-b2ba-ac1f6b6435d0',
        u'--show --image-id 6d8e07a6-bbba-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id  6d8e07a6-bbba-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id 073083b6-bbac-11e8-b2ba-ac1f6b6435d0',
        u'--all'],
                         loc('logs.py'): [u'--logfiles train6.csv dropout2.csv --notall',
        u'--logfiles dropout1.csv dropout2.csv --notall',
        u'--logfiles dropout1.csv dropout2.csv --notall --suppress\n',
        u'--logfile dropout1.csv  --notall',
        u'--logfile train7.csv  --notall',
        u'--logfile train2.csv train4.csv --notall',
        u'--logfile train2.csv --notall',
        u'--logfile train1.csv --notall',
        u'--logfile train4.csv --notall',
        u'--logfile logs/train4.csv --notall',
        u'--logfile train4.log --notall',
        u'--logfile train4 --notall',
        u'--skip 10',
        u'--skip 10 --average 15',
        u'--skip 10 --average 25',
        u'--skip 10 --average 7',
        u'--skip 5 --average 7',
        u'--skip 5',
        u'--logfiles log1.csv log2.csv'],
                         loc('otsu.py'): [u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue --thinned',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue -thinned',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue green --individual',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --channels blue green',
        u'--show --image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --channels blue green',
        u'--show --image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0 --channels blue green',
        u'--show --image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0 -channels blue green',
        u'--show --image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --individuals --channels blue green',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --individuals',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --individuals -channels blue green',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --indivoduals -channels blue green',
        u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id',
        u'--show',
        u'--show --channels blue yellow',
        u'--show --channels blue green',
        u'--show --channels blue red',
        u'--show --channels blue',
        u'--show --image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0 --channels blue',
        u'--show image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0',
        u'--show ',
        u'--show --image_id 5c1a898e-bb99-11e8-b2b9-ac1f6b6435d0 --image_set raw',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0_blue',
        u'--show --help'],
                         loc('segment.py'): [u'--show --image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0',
        u'--help',
        u'--sample 10',
        u'--sample 25 --sfrange 0.1 0.5 5',
        u'--sample 5 --sfrange 0.1 0.5 5',
        u'--sample 5 --sfrange 0.1 0.5 5 --seed 42',
        u'--sample 5 --sfrange 0.1 0.5 10 --seed 42',
        u'--sample 5 --sfrange 0.1 0.5 10',
        u'--show   --sample 5',
        u'--show   --sample 1',
        u'--show  --multiplets --sample 10',
        u'--show  --multiples --samples 10',
        u'--show --image_id  --multiples --sample 10',
        u'--show --image_id  149adb4a-bb9e-11e8-b2b9-ac1f6b6435d0',
        u'--show --image_id 00dd1766-bbae-11e8-b2ba-ac1f6b6435d0',
        u'--show --multiplets --sample 3',
        u'--show --sample 3',
        u'--show --channels red blue',
        u'--show --channels red blue\n',
        u'--show --channels yellow blue\n',
        u'--show --channels green blue\n',
        u'--show --channels red blue gold\n',
        u'--show\n',
        u'--read history.txt\n',
        u'--show --keep_temp\n',
        u'--sample 2\n',
        u'--sample\n',
        u'--image_id 854657d2-bbaa-11e8-b2ba-ac1f6b6435d0 --show\n'],
                         loc('segment2.py'): [u'--show --classes 2 6  --sample 10',
        u'--show --classes 2 6  --sample 2',
        u'--show --classes 2 6  --sample 2 --show',
        u'--show --classes 2 6  --sample 5',
        u'--show --classes 2 6',
        u'--show'],
                         loc('select.py'): [u'--multiplets'],
                         loc('select_images.py'): [u'--N 2',
        u'--N 22',
        u'--N 25'],
                         loc('slice.py'): [u'--output dummy --validation dummy',
        u'--help',
        u'foo'],
                         loc('spike2.py'): [u'--help'],
                         loc('split.py'): [u'--seed 42'],
                         loc('train.py'): [u'train --restart chk10.pth',
        u'validate',
        u'train',
        u'--help',
        u'test'],
                         loc('train1.py'): [u'--freq 2'],
                         loc('train2.py'): [u'train train --checkpoint foo --model simple3 --prefix foo',
        u'train train --checkpoint foo --model foo --prefix foo',
        u'train train --checkpoint foo --model foo --prefix foo --dropout 0.1',
        u'train train --checkpoint foo --model foo --prefix foo --dropouts 0.1',
        u'train train --checkpoint dummy --model simple3 --prefix simple',
        u'train train --checkpoint dummy --model resnet18 --prefix resnet',
        u'train multiples --checkpoint dummy --dropout 0.25 0.35 --prefix foo',
        u'train multiples --log dummy --checkpoint dummy --dropout 0.25 0.35 --prefix foo',
        u'train multiples --log dummy --checkpoint dummy --dropout 0.25 0.35',
        u'train multiples --log dummy --checkpoint dummy --dropouts 0.25 0.35',
        u'train multiples --log dummy --checkpoint dummy -dropouts 0.25 0.35',
        u'train multiples --log dummy --checkpoint dummy',
        u'--help',
        u'validate mvalid.npz',
        u'validate mvalid',
        u'--restart  chk10.pth train multiples',
        u'train multiples --restart chk6.pth',
        u'train multiples',
        u'train dataset',
        u'train foo'],
                         loc('visualize.py'): [u'--show --image_id 5c27f04c-bb99-11e8-b2b9-ac1f6b6435d0 --multiple',
        u'--show --image_id 5c27f04c-bb99-11e8-b2b9-ac1f6b6435d0',
        u'--all --labels 18',
        u'--show --image_id b2c2d08c-bbb4-11e8-b2ba-ac1f6b6435d0',
        u'--show --image_id b2c2d08c-bbb4-11e8-b2ba-ac1f6b6435d0 --bins 10',
        u'--help',
        u' --bins stone --correlate2d --labels 12 16 --multiple --sample 5',
        u' --bins stone --correlate2d --labels 12 16 --multiple',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --show --multiple  --bins scott',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --show --multiple --correlate2d --bins scott',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --show --multiple --correlate2d',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --show --multiple',
        u'--image_id 5bc093f8-bbb1-11e8-b2ba-ac1f6b6435d0 --show --multiple',
        u'--image_id e4646660-bbb8-11e8-b2ba-ac1f6b6435d0 --show --multiple',
        u'--image_id a45378f8-bbb4-11e8-b2ba-ac1f6b6435d0 --show',
        u'--sample 1 --labels 0 --show',
        u'--sample 5 --labels 0 --show',
        u'--sample 2 --labels 0 --show',
        u'--sample 5 --labels 0 --show --multiple',
        u'--sample 5 --labels 0',
        u'--sample 10 --labels 6 10 --multiple',
        u'--sample 5 --labels 6 --multiple',
        u'--sample 5 --labels 6',
        u'--sample 5 --labels 6 10',
        u'--sample 25',
        u'--show',
        u'--all',
        u'--sample 2',
        u'--sample 5',
        u'--image_set raw'],
                         loc('vizcnn.py'): [u'--layer=2',
        u'--layer=1',
        u'layer=1',
        u'--test'],
                         loc('watershed.py'): [u'--n 100 --m 5 --show',
        u'--n 100 --m 2 --show',
        u'--n 100 -m 2 --show'],
                         loc('../learn/torch-nn.py'): [u'--n 2',
        u'--n 1 --show',
        u'--n 1']}
debug.show-args-dialog = {loc('dirichlet.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(11,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'),
                      'abs')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('CellSegmentatorTest.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('CellSegmentatorTest.py'),
                      'ax')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('analyze-labels.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('analyze-labels.py'),
        'csvfile')]],
                                   'top-node': [('generic attribute',
        loc('analyze-labels.py'),
        'args')]},
        loc('census.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('census.py'),
        'axs')]},
        loc('dirichlet.py'): {'expanded-nodes': [[('class def',
        loc('dirichlet.py'),
        'Mask')]],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('dirichlet.py'),
        'args')]},
        loc('encoder.py'): {'expanded-nodes': [],
                            'selected-nodes': [None],
                            'top-node': None},
        loc('ex.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('hpascc.py'): {'expanded-nodes': [],
                           'selected-nodes': [[('function def',
        loc('hpascc.py'),
        'read_training_expectations')]],
                           'top-node': [('generic attribute',
        loc('hpascc.py'),
        'BLUE')]},
        loc('image_seg.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('image_seg.py'),
        'info')]],
                              'top-node': [('generic attribute',
        loc('image_seg.py'),
        'dataset')]},
        loc('logs.py'): {'expanded-nodes': [],
                         'selected-nodes': [],
                         'top-node': [('generic attribute',
                                       loc('logs.py'),
                                       'args')]},
        loc('otsu.py'): {'expanded-nodes': [],
                         'selected-nodes': [[('function def',
        loc('otsu.py'),
        'get_thinned')]],
                         'top-node': [('generic attribute',
                                       loc('otsu.py'),
                                       'BLUE')]},
        loc('seg.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('seg.py'),
                                      'cell_mask')]},
        loc('segment.py'): {'expanded-nodes': [],
                            'selected-nodes': [],
                            'top-node': [('function def',
        loc('segment.py'),
        'apply_masks')]},
        loc('select_images.py'): {'expanded-nodes': [],
                                  'selected-nodes': [],
                                  'top-node': [('generic attribute',
        loc('select_images.py'),
        'args')]},
        loc('slice.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('slice.py'),
        'args')]},
        loc('slice2.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('slice2.py'),
        'args')]},
        loc('spike5.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('spike5.py'),
        'axs')]},
        loc('spike6.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('spike6.py'),
        'axs')]},
        loc('spike7.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('spike7.py'),
        'axs')]},
        loc('split.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('split.py'),
        'args')]},
        loc('submission.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('train.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('generic attribute',
        loc('train.py'),
        'Actions')]},
        loc('train2.py'): {'expanded-nodes': [],
                           'selected-nodes': [[('function def',
        loc('train2.py'),
        'restart')]],
                           'top-node': [('generic attribute',
        loc('train2.py'),
        'args')]},
        loc('utils.py'): {'expanded-nodes': [],
                          'selected-nodes': [],
                          'top-node': [('function def',
        loc('utils.py'),
        'create_xkcd_colours')]},
        loc('visualize.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('visualize.py'),
        'Training')]],
                              'top-node': [('generic attribute',
        loc('visualize.py'),
        'args')]},
        loc('vizcnn.py'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': [('generic attribute',
        loc('vizcnn.py'),
        'args')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                             '__author__')]],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'),
                      'ArgInfo')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'),
                      'abspath')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typeshed/stdlib/3/random.pyi'),
                      'betavariate')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'),
                      'ADAPTIVE')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                      'download_with_url')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/afm.py'),
                      '')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'),
                      'Axes')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'),
                      '_AxesBase')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'),
                      'button_press_handler')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                      'BoundaryNorm')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'),
                      'AxesStack')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/gridspec.py'),
                      'GridSpec')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                             '_rgb_to_rgba')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'),
                      'Arc')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'),
                      'Affine2D')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'),
                      'alen')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pandas/core/internals/construction.py'),
                      'arrays_to_mgr')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'),
                      'convex_hull_plot_2d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'),
                      'adaptive_avg_pool1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                             '_ConvTransposeNd')]],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'),
                      'Conv1d')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'),
                      'check_module_version_greater_or_equal')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': u'..\\..\\..\\Program Files (x86)\\Wing Personal 7.2\\bin\\voro',
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'get_segment',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'IMAGE_LEVEL_LABELS',
                                       'fReverse': False,
                                       'fSearchText': u'meanings',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {None: ['tuple([3,2,1])\n',
        'from matplotlib.patches import Rectangle\n']},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        0.9972027972027973,
        ({'bookmarks': ([[loc('visualize.py'),
                          {'attrib-starts': [],
                           'code-line': '    Training     = restrict(read_tr'\
        'aining_expectations(path=args.path),\r\n',
                           'first-line': 15L,
                           'folded-linenos': [],
                           'sel-line': 148L,
                           'sel-line-start': 6005L,
                           'selection_end': 6017L,
                           'selection_start': 6009L,
                           'zoom': 0L},
                          1618009781.838],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': 'IMAGE_LEVEL_LABELS    = [\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 37L,
                           'sel-line-start': 1396L,
                           'selection_end': 1414L,
                           'selection_start': 1396L,
                           'zoom': 0L},
                          1618009785.336],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "colours     = ['red',\r\n",
                           'first-line': 28L,
                           'folded-linenos': [],
                           'sel-line': 39L,
                           'sel-line-start': 1341L,
                           'selection_end': 1348L,
                           'selection_start': 1341L,
                           'zoom': 0L},
                          1618009811.695],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': 'COLOUR_NAMES     = [\r\n',
                           'first-line': 9L,
                           'folded-linenos': [],
                           'sel-line': 30L,
                           'sel-line-start': 1316L,
                           'selection_end': 1328L,
                           'selection_start': 1316L,
                           'zoom': 0L},
                          1618009819.317],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "colours     = ['red',\r\n",
                           'first-line': 28L,
                           'folded-linenos': [],
                           'sel-line': 39L,
                           'sel-line-start': 1341L,
                           'selection_end': 1348L,
                           'selection_start': 1341L,
                           'zoom': 0L},
                          1618009824.317],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': 'NCOLOURS    = 3\r\n',
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 37L,
                           'sel-line-start': 1322L,
                           'selection_end': 1330L,
                           'selection_start': 1323L,
                           'zoom': 0L},
                          1618009834.76],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "colours     = ['red',\r\n",
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 39L,
                           'sel-line-start': 1341L,
                           'selection_end': 1348L,
                           'selection_start': 1341L,
                           'zoom': 0L},
                          1618009837.24],
                         [loc('slice2.py'),
                          {'attrib-starts': [('create_image_target|0|',
        82)],
                           'code-line': "            file_name        = f'{i"\
        "mage_id}_{COLOUR_NAMES[colour]}.png'\r\n",
                           'first-line': 77L,
                           'folded-linenos': [],
                           'sel-line': 97L,
                           'sel-line-start': 3374L,
                           'selection_end': 3431L,
                           'selection_start': 3419L,
                           'zoom': 0L},
                          1618009840.238],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "meanings    = ['Microtubules',\r\n",
                           'first-line': 32L,
                           'folded-linenos': [],
                           'sel-line': 45L,
                           'sel-line-start': 1457L,
                           'selection_end': 1465L,
                           'selection_start': 1457L,
                           'zoom': 0L},
                          1618009855.564],
                         [loc('dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': 'from utils              import Logg'\
        'er, set_random_seed, Timer, create_xkcd_colours\r\n',
                           'first-line': 12L,
                           'folded-linenos': [],
                           'sel-line': 29L,
                           'sel-line-start': 1379L,
                           'selection_end': 1403L,
                           'selection_start': 1403L,
                           'zoom': 0L},
                          1618009858.558],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': 'IMAGE_LEVEL_LABELS    = [\r\n',
                           'first-line': 18L,
                           'folded-linenos': [],
                           'sel-line': 37L,
                           'sel-line-start': 1396L,
                           'selection_end': 1414L,
                           'selection_start': 1396L,
                           'zoom': 0L},
                          1618009865.23],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "meanings    = ['Microtubules',\r\n",
                           'first-line': 32L,
                           'folded-linenos': [],
                           'sel-line': 45L,
                           'sel-line-start': 1457L,
                           'selection_end': 1465L,
                           'selection_start': 1457L,
                           'zoom': 0L},
                          1618009877.361],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 32L,
                           'folded-linenos': [],
                           'sel-line': 33L,
                           'sel-line-start': 1254L,
                           'selection_end': 1254L,
                           'selection_start': 1254L,
                           'zoom': 0L},
                          1618009897.857],
                         [loc('dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': 'from utils              import Logg'\
        'er, set_random_seed, Timer, create_xkcd_colours\r\n',
                           'first-line': 51L,
                           'folded-linenos': [],
                           'sel-line': 29L,
                           'sel-line-start': 1379L,
                           'selection_end': 1403L,
                           'selection_start': 1403L,
                           'zoom': 0L},
                          1618009905.811],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--worklist"\
        "')\r\n",
                           'first-line': 101L,
                           'folded-linenos': [],
                           'sel-line': 108L,
                           'sel-line-start': 4037L,
                           'selection_end': 4072L,
                           'selection_start': 4072L,
                           'zoom': 0L},
                          1618009949.205],
                         [loc('select_images.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--worklist"\
        "',\r\n",
                           'first-line': 21L,
                           'folded-linenos': [],
                           'sel-line': 37L,
                           'sel-line-start': 1780L,
                           'selection_end': 1942L,
                           'selection_start': 1783L,
                           'zoom': 0L},
                          1618009962.18],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': "                        help    = '"\
        "Name of file with list of images')\r\n",
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 110L,
                           'sel-line-start': 4123L,
                           'selection_end': 4165L,
                           'selection_start': 4165L,
                           'zoom': 0L},
                          1618009996.045],
                         [loc('select_images.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--seed',\r"\
        "\n",
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 33L,
                           'sel-line-start': 1589L,
                           'selection_end': 1622L,
                           'selection_start': 1622L,
                           'zoom': 0L},
                          1618010018.86],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': 'IMAGE_LEVEL_LABELS    = [\r\n',
                           'first-line': 18L,
                           'folded-linenos': [],
                           'sel-line': 37L,
                           'sel-line-start': 1396L,
                           'selection_end': 1414L,
                           'selection_start': 1396L,
                           'zoom': 0L},
                          1618010021.848],
                         [loc('slice2.py'),
                          {'attrib-starts': [],
                           'code-line': '    for image_id in read_worklist(a'\
        'rgs.worklist):\r\n',
                           'first-line': 111L,
                           'folded-linenos': [],
                           'sel-line': 127L,
                           'sel-line-start': 5915L,
                           'selection_end': 5948L,
                           'selection_start': 5935L,
                           'zoom': 0L},
                          1618013759.3]],
                        20),
          'current-loc': loc('slice2.py'),
          'editor-state-list': [(loc('dirichlet.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'from utils              impo'\
        'rt Logger, set_random_seed, Timer, create_xkcd_colours\r\n',
                                  'first-line': 51L,
                                  'folded-linenos': [],
                                  'sel-line': 29L,
                                  'sel-line-start': 1379L,
                                  'selection_end': 1403L,
                                  'selection_start': 1403L,
                                  'zoom': 0L}),
                                (loc('hpascc.py'),
                                 {'attrib-starts': [],
                                  'code-line': 'IMAGE_LEVEL_LABELS    = [\r'\
        '\n',
                                  'first-line': 18L,
                                  'folded-linenos': [],
                                  'sel-line': 37L,
                                  'sel-line-start': 1396L,
                                  'selection_end': 1414L,
                                  'selection_start': 1396L,
                                  'zoom': 0L}),
                                (loc('README.md'),
                                 {'attrib-starts': [],
                                  'code-line': '|slice2.py|Slice and downsam'\
        'ple dataset|\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 15L,
                                  'sel-line-start': 753L,
                                  'selection_end': 760L,
                                  'selection_start': 760L,
                                  'zoom': 0L}),
                                (loc('select_images.py'),
                                 {'attrib-starts': [],
                                  'code-line': "    parser.add_argument('--s"\
        "eed',\r\n",
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 33L,
                                  'sel-line-start': 1589L,
                                  'selection_end': 1622L,
                                  'selection_start': 1622L,
                                  'zoom': 0L}),
                                (loc('slice2.py'),
                                 {'attrib-starts': [('read_worklist|0|',
        103)],
                                  'code-line': "def read_worklist(worklist_b"\
        "ase,ext='csv'):\r\n",
                                  'first-line': 90L,
                                  'folded-linenos': [],
                                  'sel-line': 103L,
                                  'sel-line-start': 3942L,
                                  'selection_end': 3959L,
                                  'selection_start': 3946L,
                                  'zoom': 0L}),
                                (loc('spike7.py'),
                                 {'attrib-starts': [],
                                  'code-line': "image_id  = '5c27f04c-bb99-1"\
        "1e8-b2b9-ac1f6b6435d0'\n",
                                  'first-line': 6L,
                                  'folded-linenos': [],
                                  'sel-line': 27L,
                                  'sel-line-start': 1016L,
                                  'selection_end': 1065L,
                                  'selection_start': 1029L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('dirichlet.py'),
          loc('hpascc.py'),
          loc('README.md'),
          loc('select_images.py'),
          loc('slice2.py'),
          loc('spike7.py')]),
        ({'bookmarks': ([[loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'),
                          {'attrib-starts': [('kwdoc|0|',
        1612)],
                           'code-line': "            if mpl.rcParams['docstr"\
        "ing.hardcopy'] else\r\n",
                           'first-line': 1608L,
                           'folded-linenos': [],
                           'sel-line': 1630L,
                           'sel-line-start': 55450L,
                           'selection_end': 55450L,
                           'selection_start': 55450L,
                           'zoom': 0L},
                          1617766432.073],
                         [loc('visualize.py'),
                          {'attrib-starts': [],
                           'code-line': "    parser.add_argument('--seed',\r"\
        "\n",
                           'first-line': 106L,
                           'folded-linenos': [],
                           'sel-line': 165L,
                           'sel-line-start': 6593L,
                           'selection_end': 6782L,
                           'selection_start': 6595L,
                           'zoom': 0L},
                          1617820820.169],
                         [loc('utils.py'),
                          {'attrib-starts': [],
                           'code-line': "    with Timer('Test') as timer, Lo"\
        "gger(prefix='utilstest') as log:\r\n",
                           'first-line': 11L,
                           'folded-linenos': [],
                           'sel-line': 126L,
                           'sel-line-start': 4195L,
                           'selection_end': 4252L,
                           'selection_start': 4252L,
                           'zoom': 0L},
                          1617820820.874],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617820821.608],
                         [loc('census.py'),
                          {'attrib-starts': [],
                           'code-line': '        tight_layout()\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 83L,
                           'sel-line-start': 3361L,
                           'selection_end': 3383L,
                           'selection_start': 3383L,
                           'zoom': 0L},
                          1617820822.367],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '|census.py|Compute statistics for n'\
        'umber of images for combinations of classes|\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 7L,
                           'sel-line-start': 292L,
                           'selection_end': 370L,
                           'selection_start': 370L,
                           'zoom': 0L},
                          1617820823.075],
                         [loc('dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617829488.112],
                         [loc('census.py'),
                          {'attrib-starts': [],
                           'code-line': '        tight_layout()\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 64L,
                           'sel-line-start': 2772L,
                           'selection_end': 2794L,
                           'selection_start': 2794L,
                           'zoom': 0L},
                          1617829489.478],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'),
                          {'attrib-starts': [('_to_rgba_no_colorcycle|0|',
        196)],
                           'code-line': '        raise ValueError(f"Invalid '\
        'RGBA argument: {orig_c!r}")\r\n',
                           'first-line': 237L,
                           'folded-linenos': [],
                           'sel-line': 259L,
                           'sel-line-start': 9593L,
                           'selection_end': 9593L,
                           'selection_start': 9593L,
                           'zoom': 0L},
                          1617829490.236],
                         [loc('utils.py'),
                          {'attrib-starts': [],
                           'code-line': "    with Timer('Test') as timer, Lo"\
        "gger(prefix='utilstest') as log:\r\n",
                           'first-line': 16L,
                           'folded-linenos': [],
                           'sel-line': 131L,
                           'sel-line-start': 4312L,
                           'selection_end': 4369L,
                           'selection_start': 4369L,
                           'zoom': 0L},
                          1617829691.36],
                         [loc('README.md'),
                          {'attrib-starts': [],
                           'code-line': '|census.py|Compute statistics for n'\
        'umber of images for combinations of classes|\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 7L,
                           'sel-line-start': 310L,
                           'selection_end': 370L,
                           'selection_start': 370L,
                           'zoom': 0L},
                          1617829692.147],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617829692.956],
                         [loc('dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617907117.724],
                         [loc('utils.py'),
                          {'attrib-starts': [],
                           'code-line': "    with Timer('Test') as timer, Lo"\
        "gger(prefix='utilstest') as log:\r\n",
                           'first-line': 16L,
                           'folded-linenos': [],
                           'sel-line': 131L,
                           'sel-line-start': 4312L,
                           'selection_end': 4369L,
                           'selection_start': 4369L,
                           'zoom': 0L},
                          1617907119.159],
                         [loc('segment.py'),
                          {'attrib-starts': [('apply_masks|0|',
        134)],
                           'code-line': '        binary_mask        = label_'\
        'cell(nuc_segmentations[i], cell_segmentations[i])[1].astype(uint8)'\
        '\r\n',
                           'first-line': 158L,
                           'folded-linenos': [],
                           'sel-line': 162L,
                           'sel-line-start': 6743L,
                           'selection_end': 6782L,
                           'selection_start': 6772L,
                           'zoom': 0L},
                          1617907120.25],
                         [loc('dirichlet.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617939124.226],
                         [loc('hpascc.py'),
                          {'attrib-starts': [],
                           'code-line': '#   Copyright (C) 2021 Greenweaves '\
        'Software Limited\r\n',
                           'first-line': 0L,
                           'folded-linenos': [],
                           'sel-line': 0L,
                           'sel-line-start': 0L,
                           'selection_end': 0L,
                           'selection_start': 0L,
                           'zoom': 0L},
                          1617939124.938],
                         [loc('utils.py'),
                          {'attrib-starts': [],
                           'code-line': "    with Timer('Test') as timer, Lo"\
        "gger(prefix='utilstest') as log:\r\n",
                           'first-line': 16L,
                           'folded-linenos': [],
                           'sel-line': 131L,
                           'sel-line-start': 4312L,
                           'selection_end': 4369L,
                           'selection_start': 4369L,
                           'zoom': 0L},
                          1617939125.877],
                         [loc('spike5.py'),
                          {'attrib-starts': [],
                           'code-line': '# axs[1,0].imshow(img_cv)\r\n',
                           'first-line': 24L,
                           'folded-linenos': [],
                           'sel-line': 57L,
                           'sel-line-start': 1868L,
                           'selection_end': 1871L,
                           'selection_start': 1871L,
                           'zoom': 0L},
                          1617939127.196],
                         [loc('utils.py'),
                          {'attrib-starts': [],
                           'code-line': "    with Timer('Test') as timer, Lo"\
        "gger(prefix='utilstest') as log:\r\n",
                           'first-line': 16L,
                           'folded-linenos': [],
                           'sel-line': 131L,
                           'sel-line-start': 4312L,
                           'selection_end': 4369L,
                           'selection_start': 4369L,
                           'zoom': 0L},
                          1617939161.689]],
                        20),
          'current-loc': loc('dirichlet.py'),
          'editor-state-list': [(loc('dirichlet.py'),
                                 {'attrib-starts': [],
                                  'code-line': '#   Copyright (C) 2021 Green'\
        'weaves Software Limited\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('hpascc.py'),
                                 {'attrib-starts': [],
                                  'code-line': '#   Copyright (C) 2021 Green'\
        'weaves Software Limited\r\n',
                                  'first-line': 0L,
                                  'folded-linenos': [],
                                  'sel-line': 0L,
                                  'sel-line-start': 0L,
                                  'selection_end': 0L,
                                  'selection_start': 0L,
                                  'zoom': 0L}),
                                (loc('README.md'),
                                 {'attrib-starts': [],
                                  'code-line': '|analyze-labels|Find images '\
        ' that have only one label|\r\n',
                                  'first-line': 39L,
                                  'folded-linenos': [],
                                  'sel-line': 40L,
                                  'sel-line-start': 1708L,
                                  'selection_end': 1762L,
                                  'selection_start': 1762L,
                                  'zoom': 0L}),
                                (loc('select_images.py'),
                                 {}),
                                (loc('slice2.py'),
                                 {'attrib-starts': [],
                                  'code-line': '#     Targets     List of va'\
        'lues that are expected\r\n',
                                  'first-line': 133L,
                                  'folded-linenos': [],
                                  'sel-line': 115L,
                                  'sel-line-start': 4121L,
                                  'selection_end': 4171L,
                                  'selection_start': 4171L,
                                  'zoom': 0L}),
                                (loc('spike7.py'),
                                 {'attrib-starts': [],
                                  'code-line': '     fig                = pl'\
        't.figure(figsize=(27,18))\n',
                                  'first-line': 40L,
                                  'folded-linenos': [],
                                  'sel-line': 39L,
                                  'sel-line-start': 1332L,
                                  'selection_end': 1356L,
                                  'selection_start': 1356L,
                                  'zoom': 0L})],
          'has-focus': False,
          'locked': False},
         [loc('dirichlet.py'),
          loc('hpascc.py'),
          loc('README.md'),
          loc('select_images.py'),
          loc('slice2.py'),
          loc('spike7.py')])),
                               'open_files': [u'README.md',
        u'spike7.py',
        u'dirichlet.py',
        u'select_images.py',
        u'hpascc.py',
        u'slice2.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1618013748.488),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    0),
                                   1618009945.122),
                 'user_data': {}},
        'window-alloc': (8,
                         -1,
                         1900,
                         1015)}]}
guimgr.recent-documents = [loc('slice2.py'),
                           loc('hpascc.py'),
                           loc('select_images.py'),
                           loc('dirichlet.py'),
                           loc('spike7.py'),
                           loc('README.md')]
guimgr.visual-state = {loc('../../../Program Files (x86)/Wing Personal 7.2/resources/builtin-pi-files/__os__/win32/3.8/builtins.pi'): {'a'\
        'ttrib-starts': [('enumerate|0|',
                          1479)],
        'code-line': 'class enumerate(object):\n',
        'first-line': 1468L,
        'folded-linenos': [],
        'sel-line': 1479L,
        'sel-line-start': 43751L,
        'selection_end': 43766L,
        'selection_start': 43757L,
        'zoom': 0L},
                       loc('../../../Program Files (x86)/Wing Personal 7.2/resources/typing/src/typing.py'): {'a'\
        'ttrib-starts': [('IO|0|',
                          2234),
                         ('IO|0|.write|0|',
                          2314)],
        'code-line': '    def write(self, s: AnyStr) -> int:\n',
        'first-line': 2300L,
        'folded-linenos': [],
        'sel-line': 2314L,
        'sel-line-start': 78079L,
        'selection_end': 78092L,
        'selection_start': 78087L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/api/kaggle_api_extended.py'): {'a'\
        'ttrib-starts': [('KaggleApi|0|',
                          83),
                         ('KaggleApi|0|.authenticate|0|',
                          145)],
        'code-line': "                raise IOError('Could not find {}. Make"\
                     " sure it\\'s located in'\r\n",
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 163L,
        'sel-line-start': 6179L,
        'selection_end': 6179L,
        'selection_start': 6179L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/rest.py'): {'a'\
        'ttrib-starts': [('RESTClientObject|0|',
                          68),
                         ('RESTClientObject|0|.request|0|',
                          123)],
        'code-line': '            raise ApiException(http_resp=r)\r\n',
        'first-line': 221L,
        'folded-linenos': [],
        'sel-line': 240L,
        'sel-line-start': 9657L,
        'selection_end': 9657L,
        'selection_start': 9657L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/zipfile.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/pycocotools/_mask.pi'): {'a'\
        'ttrib-starts': [('encode|0|',
                          36)],
        'code-line': 'def encode():\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 524L,
        'selection_end': 534L,
        'selection_start': 528L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'a'\
        'ttrib-starts': [('ImageFile|0|',
                          86),
                         ('ImageFile|0|.__init__|0|',
                          89)],
        'code-line': '            self.fp = open(fp, "rb")\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2471L,
        'selection_end': 2471L,
        'selection_start': 2471L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\n',
        'first-line': 976L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 32162L,
        'selection_end': 32162L,
        'selection_start': 32162L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'): {'a'\
        'ttrib-starts': [('_reshape_2D|0|',
                          1332)],
        'code-line': "            raise ValueError(f'{name} must have 2 or f"\
                     "ewer dimensions')\n",
        'first-line': 1351L,
        'folded-linenos': [],
        'sel-line': 1356L,
        'sel-line-start': 44072L,
        'selection_end': 44072L,
        'selection_start': 44072L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/deprecation.py'): {'a'\
        'ttrib-starts': [('_make_keyword_only|0|',
                          415),
                         ('_make_keyword_only|0|.wrapper|0|',
                          439)],
        'code-line': '        return func(*args, **kwargs)\n',
        'first-line': 431L,
        'folded-linenos': [],
        'sel-line': 450L,
        'sel-line-start': 17289L,
        'selection_end': 17289L,
        'selection_start': 17289L,
        'zoom': 0L},
                       loc('../bioinformatics/mgap.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time() - start\r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3997L,
        'selection_end': 4155L,
        'selection_start': 3997L,
        'zoom': 0L},
                       loc('CellSegmentatorTest.py'): {'attrib-starts': [],
        'code-line': "mt       = glob.glob(save_dir + '/' + '*_red.png')\r\n",
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 320L,
        'selection_end': 333L,
        'selection_start': 333L,
        'zoom': 0L},
                       loc('README.markdown'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '|analyze-labels|Find images  that have only one label|'\
                     '\r\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1708L,
        'selection_end': 1762L,
        'selection_start': 1762L,
        'zoom': 0L},
                       loc('analyze-labels.py'): {'attrib-starts': [],
        'code-line': '        descriptions = create_descriptions()\r\n',
        'first-line': 36L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 2302L,
        'selection_end': 2317L,
        'selection_start': 2317L,
        'zoom': 0L},
                       loc('census.py'): {'attrib-starts': [],
        'code-line': '        tight_layout()\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 64L,
        'sel-line-start': 2772L,
        'selection_end': 2794L,
        'selection_start': 2794L,
        'zoom': 0L},
                       loc('descrptions.csv'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('download.py'): {'attrib-starts': [],
        'code-line': 'import os \r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 819L,
        'selection_end': 829L,
        'selection_start': 829L,
        'zoom': 0L},
                       loc('encoder.py'): {'attrib-starts': [],
        'code-line': 'from pycocotools import _mask as coco_mask\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 35L,
        'selection_end': 77L,
        'selection_start': 68L,
        'zoom': 0L},
                       loc('encoding.py'): {'attrib-starts': [],
        'code-line': 'from pycocotools import _mask as coco_mask\r\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 122L,
        'selection_end': 197L,
        'selection_start': 122L,
        'zoom': 0L},
                       loc('ex.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0L,
                                      'folded-linenos': [],
                                      'sel-line': 0L,
                                      'sel-line-start': 0L,
                                      'selection_end': 0L,
                                      'selection_start': 0L,
                                      'zoom': 0L},
                       loc('hpascc.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('image_seg.py'): {'attrib-starts': [],
        'code-line': "train = dataset['train'].map(load_image_train)#, num_p"\
                     "arallel_calls=tf.data.AUTOTUNE)\r\n",
        'first-line': 45L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1373L,
        'selection_end': 1441L,
        'selection_start': 1441L,
        'zoom': 0L},
                       loc('logs.py'): {'attrib-starts': [],
        'code-line': '                 c         = args.colours[k%len(args.c'\
                     'olours)],\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 159L,
        'sel-line-start': 6500L,
        'selection_end': 6562L,
        'selection_start': 6562L,
        'zoom': 0L},
                       loc('otsu.py'): {'attrib-starts': [('get_distance|0|',
        533)],
        'code-line': '    return sqrt((x1-x2)*(x1-x2) + (y1-y2)*(y1-y2))\r\n',
        'first-line': 519L,
        'folded-linenos': [],
        'sel-line': 536L,
        'sel-line-start': 17220L,
        'selection_end': 17269L,
        'selection_start': 17236L,
        'zoom': 0L},
                       loc('seg.py'): {'attrib-starts': [],
                                       'code-line': 'segmentator = cellsegme'\
        'ntator.CellSegmentator(\r\n',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 13L,
                                       'sel-line-start': 506L,
                                       'selection_end': 551L,
                                       'selection_start': 536L,
                                       'zoom': 0L},
                       loc('segment.py'): {'attrib-starts': [('apply_masks|0'\
        '|',
        134)],
        'code-line': '        binary_mask        = label_cell(nuc_segmentati'\
                     'ons[i], cell_segmentations[i])[1].astype(uint8)\r\n',
        'first-line': 158L,
        'folded-linenos': [],
        'sel-line': 162L,
        'sel-line-start': 6743L,
        'selection_end': 6782L,
        'selection_start': 6772L,
        'zoom': 0L},
                       loc('segment2.py'): {'attrib-starts': [('segment_imag'\
        'e|0|',
        95)],
        'code-line': 'def segment_image(img_cell,binary_mask,class_id):\r\n',
        'first-line': 80L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 3988L,
        'selection_end': 4005L,
        'selection_start': 3992L,
        'zoom': 0L},
                       loc('segmentation.py'): {'attrib-starts': [],
        'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+')"\
                     "\r\n",
        'first-line': 106L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4338L,
        'selection_end': 4370L,
        'selection_start': 4370L,
        'zoom': 0L},
                       loc('select.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('slice.py'): {'attrib-starts': [],
        'code-line': '#     Targets     List of values that are expected\r\n',
        'first-line': 133L,
        'folded-linenos': [],
        'sel-line': 115L,
        'sel-line-start': 4121L,
        'selection_end': 4171L,
        'selection_start': 4171L,
        'zoom': 0L},
                       loc('som.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 5L,
                                       'sel-line-start': 96L,
                                       'selection_end': 96L,
                                       'selection_start': 96L,
                                       'zoom': 0L},
                       loc('spike4.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('spike5.py'): {'attrib-starts': [],
        'code-line': '# axs[1,0].imshow(img_cv)\r\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1868L,
        'selection_end': 1871L,
        'selection_start': 1871L,
        'zoom': 0L},
                       loc('spike6.py'): {'attrib-starts': [('create_mask|0|',
        31)],
        'code-line': '               max_distance = sys.float_info.max\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1317L,
        'selection_end': 1356L,
        'selection_start': 1356L,
        'zoom': 0L},
                       loc('split.py'): {'attrib-starts': [],
        'code-line': '    seed(args.seed)\r\n',
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 1914L,
        'selection_end': 1933L,
        'selection_start': 1917L,
        'zoom': 0L},
                       loc('submission.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('summarize.py'): {'attrib-starts': [('read_traini'\
        'ng_expectations|0|',
        45)],
        'code-line': '\r\n',
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1836L,
        'selection_end': 1836L,
        'selection_start': 1836L,
        'zoom': 0L},
                       loc('test.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('train.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\n',
        'first-line': 255L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('train1.py'): {'attrib-starts': [],
        'code-line': '#  To contact me, Simon Crase, email simon@greenweaves'\
                     '.nz\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 743L,
        'selection_end': 800L,
        'selection_start': 800L,
        'zoom': 0L},
                       loc('train2.py'): {'attrib-starts': [],
        'code-line': "    parser.add_argument('--seed',\r\n",
        'first-line': 374L,
        'folded-linenos': [],
        'sel-line': 388L,
        'sel-line-start': 15919L,
        'selection_end': 16106L,
        'selection_start': 15923L,
        'zoom': 0L},
                       loc('tt.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 84L,
                                      'folded-linenos': [],
                                      'sel-line': 8L,
                                      'sel-line-start': 217L,
                                      'selection_end': 217L,
                                      'selection_start': 217L,
                                      'zoom': 0L},
                       loc('unzip.py'): {'attrib-starts': [],
        'code-line': '#  To contact me, Simon Crase, email simon@greenweaves'\
                     '.nz\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 743L,
        'selection_end': 746L,
        'selection_start': 746L,
        'zoom': 0L},
                       loc('utils.py'): {'attrib-starts': [],
        'code-line': "    with Timer('Test') as timer, Logger(prefix='utilst"\
                     "est') as log:\r\n",
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4312L,
        'selection_end': 4369L,
        'selection_start': 4369L,
        'zoom': 0L},
                       loc('visualize.py'): {'attrib-starts': [],
        'code-line': '    Training     = restrict(read_training_expectations'\
                     '(path=args.path),\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 148L,
        'sel-line-start': 6005L,
        'selection_end': 6017L,
        'selection_start': 6009L,
        'zoom': 0L},
                       loc('watershed.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 121L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../learn/data-loading.py'): {'attrib-starts': [],
        'code-line': 'dataloader = DataLoader(transformed_dataset, batch_siz'\
                     'e=4,\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 213L,
        'sel-line-start': 6672L,
        'selection_end': 6685L,
        'selection_start': 6685L,
        'zoom': 0L},
                       loc('../learn/torch-nn.py'): {'attrib-starts': [('tra'\
        'in|0|',
        53)],
        'code-line': '    plt.plot(losses)\r\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 3811L,
        'selection_end': 3824L,
        'selection_start': 3824L,
        'zoom': 0L},
                       loc('../../bioinformatics/osym.py'): {'attrib-starts': [],
        'code-line': '#   the Free Software Foundation, either version 3 of '\
                     'the License, or\r\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 208L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('ArgumentParser|0|',
                          1618)],
        'code-line': 'class ArgumentParser(_AttributeHolder, _ActionsContain'\
                     'er):\r\n',
        'first-line': 1862L,
        'folded-linenos': [],
        'sel-line': 1618L,
        'sel-line-start': 60097L,
        'selection_end': 60117L,
        'selection_start': 60103L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'a'\
        'ttrib-starts': [('Signature|0|',
                          2729),
                         ('Signature|0|._bind|0|',
                          2888)],
        'code-line': '                        raise TypeError(\r\n',
        'first-line': 2944L,
        'folded-linenos': [],
        'sel-line': 2963L,
        'sel-line-start': 113758L,
        'selection_end': 113758L,
        'selection_start': 113758L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/ntpath.py'): {'a'\
        'ttrib-starts': [('join|0|',
                          32)],
        'code-line': '    path = os.fspath(path)\r\n',
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 77L,
        'sel-line-start': 2508L,
        'selection_end': 2508L,
        'selection_start': 2508L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/random.py'): {'a'\
        'ttrib-starts': [('Random|0|',
                          77),
                         ('Random|0|.sample|0|',
                          314)],
        'code-line': '            raise ValueError("Sample larger than popul'\
                     'ation or is negative")\r\n',
        'first-line': 348L,
        'folded-linenos': [],
        'sel-line': 362L,
        'sel-line-start': 13761L,
        'selection_end': 13761L,
        'selection_start': 13761L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open|0|',
                          2734)],
        'code-line': '    raise IOError("cannot identify image file %r" % (f'\
                     'ilename if filename else fp))\n',
        'first-line': 1778L,
        'folded-linenos': [],
        'sel-line': 2817L,
        'sel-line-start': 93596L,
        'selection_end': 93596L,
        'selection_start': 93596L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'a'\
        'ttrib-starts': [('ImageFile|0|',
                          76),
                         ('ImageFile|0|.__init__|0|',
                          79)],
        'code-line': '            self.fp = open(fp, "rb")\n',
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 94L,
        'sel-line-start': 2228L,
        'selection_end': 2228L,
        'selection_start': 2228L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'a'\
        'ttrib-starts': [('CellSegmentator|0|',
                          18)],
        'code-line': 'class CellSegmentator(object):\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 559L,
        'selection_end': 580L,
        'selection_start': 565L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'a'\
        'ttrib-starts': [('label_cell|0|',
                          82)],
        'code-line': 'def label_cell(nuclei_pred, cell_pred):\r\n',
        'first-line': 68L,
        'folded-linenos': [],
        'sel-line': 82L,
        'sel-line-start': 2924L,
        'selection_end': 2938L,
        'selection_start': 2928L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/functions.py'): {'a'\
        'ttrib-starts': [('get_writer|0|',
                          188)],
        'code-line': '        raise ValueError(\n',
        'first-line': 203L,
        'folded-linenos': [],
        'sel-line': 225L,
        'sel-line-start': 7452L,
        'selection_end': 7452L,
        'selection_start': 7452L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from ..core import urlopen, get_remote_file\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 299L,
        'selection_end': 299L,
        'selection_start': 299L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/__init__.py'): {'a'\
        'ttrib-starts': [('_preprocess_data|0|',
                          1363),
                         ('_preprocess_data|0|.inner|0|',
                          1435)],
        'code-line': '            return func(ax, *map(sanitize_sequence, ar'\
                     'gs), **kwargs)\r\n',
        'first-line': 1415L,
        'folded-linenos': [],
        'sel-line': 1437L,
        'sel-line-start': 50476L,
        'selection_end': 50476L,
        'selection_start': 50476L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('kwdoc|0|',
                          1612)],
        'code-line': "            if mpl.rcParams['docstring.hardcopy'] else"\
                     "\r\n",
        'first-line': 1608L,
        'folded-linenos': [],
        'sel-line': 1630L,
        'sel-line-start': 55450L,
        'selection_end': 55450L,
        'selection_start': 55450L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_axes.py'): {'a'\
        'ttrib-starts': [('Axes|0|',
                          70),
                         ('Axes|0|._parse_scatter_color_args|0|',
                          4162)],
        'code-line': '                    raise ValueError(\r\n',
        'first-line': 4294L,
        'folded-linenos': [],
        'sel-line': 4299L,
        'sel-line-start': 168049L,
        'selection_end': 168049L,
        'selection_start': 168049L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/axes/_base.py'): {'a'\
        'ttrib-starts': [('_AxesBase|0|',
                          422),
                         ('_AxesBase|0|.get_window_extent|0|',
                          592)],
        'code-line': '        return self.bbox\r\n',
        'first-line': 586L,
        'folded-linenos': [],
        'sel-line': 608L,
        'sel-line-start': 23477L,
        'selection_end': 23477L,
        'selection_start': 23477L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/backend_bases.py'): {'a'\
        'ttrib-starts': [('FigureCanvasBase|0|',
                          1643),
                         ('FigureCanvasBase|0|._get_output_canvas|0|',
                          2046)],
        'code-line': '        raise ValueError(\r\n',
        'first-line': 2056L,
        'folded-linenos': [],
        'sel-line': 2078L,
        'sel-line-start': 74570L,
        'selection_end': 74570L,
        'selection_start': 74570L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/cbook/__init__.py'): {'a'\
        'ttrib-starts': [('_reshape_2D|0|',
                          1336)],
        'code-line': "            raise ValueError(f'{name} must have 2 or f"\
                     "ewer dimensions')\r\n",
        'first-line': 1369L,
        'folded-linenos': [],
        'sel-line': 1388L,
        'sel-line-start': 46444L,
        'selection_end': 46444L,
        'selection_start': 46444L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/cbook/deprecation.py'): {'a'\
        'ttrib-starts': [('_make_keyword_only|0|',
                          415),
                         ('_make_keyword_only|0|.wrapper|0|',
                          439)],
        'code-line': '        return func(*args, **kwargs)\r\n',
        'first-line': 428L,
        'folded-linenos': [],
        'sel-line': 450L,
        'sel-line-start': 17739L,
        'selection_end': 17739L,
        'selection_start': 17739L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colorbar.py'): {'a'\
        'ttrib-starts': [('Colorbar|0|',
                          1185),
                         ('Colorbar|0|.__init__|0|',
                          1195)],
        'code-line': '        if mappable.get_array() is not None:\r\n',
        'first-line': 1176L,
        'folded-linenos': [],
        'sel-line': 1198L,
        'sel-line-start': 46532L,
        'selection_end': 46532L,
        'selection_start': 46532L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/colors.py'): {'a'\
        'ttrib-starts': [('_to_rgba_no_colorcycle|0|',
                          196)],
        'code-line': '        raise ValueError("RGBA values should be within'\
                     ' 0-1 range")\r\n',
        'first-line': 254L,
        'folded-linenos': [],
        'sel-line': 276L,
        'sel-line-start': 10402L,
        'selection_end': 10402L,
        'selection_start': 10402L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/figure.py'): {'a'\
        'ttrib-starts': [('Figure|0|',
                          219),
                         ('Figure|0|.savefig|0|',
                          2168)],
        'code-line': '        if transparent is None:\r\n',
        'first-line': 2303L,
        'folded-linenos': [],
        'sel-line': 2296L,
        'sel-line-start': 85759L,
        'selection_end': 85759L,
        'selection_start': 85759L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/image.py'): {'a'\
        'ttrib-starts': [('_ImageBase|0|',
                          214),
                         ('_ImageBase|0|.set_data|0|',
                          683)],
        'code-line': '            raise TypeError("Invalid shape {} for imag'\
                     'e data"\r\n',
        'first-line': 686L,
        'folded-linenos': [],
        'sel-line': 708L,
        'sel-line-start': 29364L,
        'selection_end': 29364L,
        'selection_start': 29364L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/patches.py'): {'a'\
        'ttrib-starts': [('Patch|0|',
                          25),
                         ('Patch|0|.contains_point|0|',
                          152)],
        'code-line': '        radius = self._process_radius(radius)\r\n',
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 197L,
        'sel-line-start': 6644L,
        'selection_end': 6644L,
        'selection_start': 6644L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('show|0|',
                          323)],
        'code-line': 'def show(*args, **kwargs):\r\n',
        'first-line': 309L,
        'folded-linenos': [],
        'sel-line': 323L,
        'sel-line-start': 11178L,
        'selection_end': 11186L,
        'selection_start': 11182L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/transforms.py'): {'a'\
        'ttrib-starts': [('BboxBase|0|',
                          212),
                         ('BboxBase|0|.transformed|0|',
                          469)],
        'code-line': '        pts = self.get_points()\r\n',
        'first-line': 468L,
        'folded-linenos': [],
        'sel-line': 473L,
        'sel-line-start': 15868L,
        'selection_end': 15868L,
        'selection_start': 15868L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/core/fromnumeric.py'): {'a'\
        'ttrib-starts': [('_wrapfunc|0|',
                          51)],
        'code-line': '        return bound(*args, **kwds)\r\n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1651L,
        'selection_end': 1651L,
        'selection_start': 1651L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/format.py'): {'a'\
        'ttrib-starts': [('_write_array_header|0|',
                          402)],
        'code-line': '    fp.write(header)\r\n',
        'first-line': 405L,
        'folded-linenos': [],
        'sel-line': 427L,
        'sel-line-start': 15374L,
        'selection_end': 15374L,
        'selection_start': 15374L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/npyio.py'): {'a'\
        'ttrib-starts': [('load|0|',
                          283)],
        'code-line': '            fid = stack.enter_context(open(os_fspath(f'\
                     'ile), "rb"))\r\n',
        'first-line': 410L,
        'folded-linenos': [],
        'sel-line': 415L,
        'sel-line-start': 14553L,
        'selection_end': 14553L,
        'selection_start': 14553L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/psutil/__init__.py'): {'a'\
        'ttrib-starts': [('Process|0|',
                          291),
                         ('Process|0|._init|0|',
                          327)],
        'code-line': '                raise NoSuchProcess(pid, None, msg)\n',
        'first-line': 344L,
        'folded-linenos': [],
        'sel-line': 366L,
        'sel-line-start': 12180L,
        'selection_end': 12180L,
        'selection_start': 12180L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pycocotools/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "__author__ = 'tylin'\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pytorch_zoo/abstract_model.py'): {'a'\
        'ttrib-starts': [('ConvBottleneck|0|',
                          101),
                         ('ConvBottleneck|0|.forward|0|',
                          109)],
        'code-line': '        x = torch.cat([dec, enc], dim=1)\r\n',
        'first-line': 88L,
        'folded-linenos': [],
        'sel-line': 110L,
        'sel-line-start': 3942L,
        'selection_end': 3942L,
        'selection_start': 3942L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/filters.py'): {'a'\
        'ttrib-starts': [('_min_or_max_filter|0|',
                          1078)],
        'code-line': "            raise RuntimeError('footprint array has in"\
                     "correct shape.')\n",
        'first-line': 1111L,
        'folded-linenos': [],
        'sel-line': 1133L,
        'sel-line-start': 38841L,
        'selection_end': 38841L,
        'selection_start': 38841L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/spatial/_plotutils.py'): {'a'\
        'ttrib-starts': [('voronoi_plot_2d|0|',
                          149)],
        'code-line': 'def voronoi_plot_2d(vor, ax=None, **kw):\n',
        'first-line': 246L,
        'folded-linenos': [],
        'sel-line': 149L,
        'sel-line-start': 3375L,
        'selection_end': 3394L,
        'selection_start': 3379L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/skimage/io/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""Utilities to read and write images in various forma'\
                     'ts.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/functional.py'): {'a'\
        'ttrib-starts': [('broadcast_tensors|0|',
                          32)],
        'code-line': '    return _VF.broadcast_tensors(tensors)\r\n',
        'first-line': 39L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 1714L,
        'selection_end': 1714L,
        'selection_start': 1714L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/functional.py'): {'a'\
        'ttrib-starts': [('mse_loss|0|',
                          2515)],
        'code-line': '    if not (target.size() == input.size()):\r\n',
        'first-line': 2507L,
        'folded-linenos': [],
        'sel-line': 2529L,
        'sel-line-start': 116718L,
        'selection_end': 116718L,
        'selection_start': 116718L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/conv.py'): {'a'\
        'ttrib-starts': [('Conv2d|0|',
                          210),
                         ('Conv2d|0|._conv_forward|0|',
                          339)],
        'code-line': '        return F.conv2d(input, weight, self.bias, self'\
                     '.stride,\r\n',
        'first-line': 339L,
        'folded-linenos': [],
        'sel-line': 344L,
        'sel-line-start': 16260L,
        'selection_end': 16260L,
        'selection_start': 16260L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/linear.py'): {'a'\
        'ttrib-starts': [('Linear|0|',
                          32)],
        'code-line': 'class Linear(Module):\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 32L,
        'sel-line-start': 740L,
        'selection_end': 752L,
        'selection_start': 746L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/loss.py'): {'a'\
        'ttrib-starts': [('MSELoss|0|',
                          368)],
        'code-line': 'class MSELoss(_Loss):\r\n',
        'first-line': 354L,
        'folded-linenos': [],
        'sel-line': 368L,
        'sel-line-start': 18289L,
        'selection_end': 18302L,
        'selection_start': 18295L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/module.py'): {'a'\
        'ttrib-starts': [('Module|0|',
                          31),
                         ('Module|0|.__getattr__|0|',
                          65)],
        'code-line': "        raise AttributeError(\"'{}' object has no attr"\
                     "ibute '{}'\".format(\r\n",
        'first-line': 570L,
        'folded-linenos': [],
        'sel-line': 592L,
        'sel-line-start': 24265L,
        'selection_end': 24265L,
        'selection_start': 24265L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/nn/modules/pooling.py'): {'a'\
        'ttrib-starts': [('MaxPool2d|0|',
                          78)],
        'code-line': 'class MaxPool2d(_MaxPoolNd):\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 78L,
        'sel-line-start': 3143L,
        'selection_end': 3158L,
        'selection_start': 3149L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/optim/sgd.py'): {'a'\
        'ttrib-starts': [('SGD|0|',
                          4),
                         ('SGD|0|.__init__|0|',
                          3)],
        'code-line': '                 weight_decay=0, nesterov=False):\r\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 55L,
        'sel-line-start': 2063L,
        'selection_end': 2092L,
        'selection_start': 2080L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/serialization.py'): {'a'\
        'ttrib-starts': [('_open_file|0|',
                          212),
                         ('_open_file|0|.__init__|0|',
                          213)],
        'code-line': '        super(_open_file, self).__init__(open(name, mo'\
                     'de))\r\n',
        'first-line': 209L,
        'folded-linenos': [],
        'sel-line': 214L,
        'sel-line-start': 6838L,
        'selection_end': 6838L,
        'selection_start': 6838L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/tensor.py'): {'a'\
        'ttrib-starts': [('Tensor|0|',
                          40),
                         ('Tensor|0|.__array__|0|',
                          489)],
        'code-line': '            return self.numpy()\r\n',
        'first-line': 469L,
        'folded-linenos': [],
        'sel-line': 491L,
        'sel-line-start': 20975L,
        'selection_end': 20975L,
        'selection_start': 20975L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataloader.py'): {'a'\
        'ttrib-starts': [('DataLoader|0|',
                          59)],
        'code-line': 'class DataLoader(object):\r\n',
        'first-line': 45L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 1926L,
        'selection_end': 1942L,
        'selection_start': 1932L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torch/utils/data/dataset.py'): {'a'\
        'ttrib-starts': [('Dataset|0|',
                          7)],
        'code-line': 'class Dataset(object):\r\n',
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 104L,
        'selection_end': 117L,
        'selection_start': 110L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/torchvision/utils.py'): {'a'\
        'ttrib-starts': [('make_grid|0|',
                          5)],
        'code-line': '    if not (torch.is_tensor(tensor) or\r\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 1347L,
        'selection_end': 1347L,
        'selection_start': 1347L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'a'\
        'ttrib-starts': [('StackSummary|0|',
                          317),
                         ('StackSummary|0|.extract|0|',
                          321)],
        'code-line': "            limit = getattr(sys, 'tracebacklimit', Non"\
                     "e)\r\n",
        'first-line': 313L,
        'folded-linenos': [],
        'sel-line': 335L,
        'sel-line-start': 12459L,
        'selection_end': 12459L,
        'selection_start': 12459L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.replace-history = [u'COLOUR_NAMES',
                          u'Mask',
                          u'label',
                          u'labels',
                          u'removes',
                          u'segment',
                          u'NRGB',
                          u'chks',
                          u'negative',
                          u'Data',
                          u'grey_scale_image',
                          u'weights',
                          u'colour2channel',
                          u'point',
                          u'DESCRIPTIONS',
                          u'colours',
                          u'IMAGE_LEVEL_LABELS',
                          u'NCHANNELS',
                          u'segment_channel',
                          u'channel']
search.search-history = [u'meanings',
                         u'colours',
                         u'get_segment',
                         u'Segments',
                         u'distance',
                         u'distanc',
                         u'dist',
                         u'di',
                         u'd',
                         u'flatten',
                         u'fl',
                         u'f',
                         u'class',
                         u'classes',
                         u'to_be_removed',
                         u'set_random_seed',
                         u'mean',
                         u'process',
                         u'get_dist2',
                         u'voronoi']
search.search-scope-history = [loc('../../../Program Files (x86)/Wing Personal 7.2/bin/voro'),
                               loc('../../../Program Files (x86)/Wing Personal 7.2/bin/vor')]

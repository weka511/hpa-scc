#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
proj.file-list = [loc('analyze-labels.py'),
                  loc('CellSegmentatorTest.py'),
                  loc('download.py'),
                  loc('encoding.py'),
                  loc('README.md'),
                  loc('segment2.py'),
                  loc('segment.py'),
                  loc('summarize.py'),
                  loc('unzip.py'),
                  loc('visualize.py'),
                  loc('watershed.py')]
proj.file-type = 'normal'
proj.launch-config = {loc('analyze-labels.py'): ('project',
        (u'--n 2',
         '')),
                      loc('otsu.py'): ('project',
                                       (u'--show ',
        '')),
                      loc('segment.py'): ('project',
        (u'--show --channels red blue\n',
         '')),
                      loc('segment2.py'): ('project',
        (u'--show --classes 2 6  --sample 10',
         '')),
                      loc('watershed.py'): ('project',
        (u'--n 100 --m 5 --show',
         '')),
                      loc('../learn/torch-nn.py'): ('project',
        (u'--n 2',
         ''))}
[user attributes]
debug.exceptions-ignored = {loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {15: True}}
debug.recent-run-args = {loc('analyze-labels.py'): [u'--n 2',
        u'--classes 1 2 3 6',
        u'--classes all'],
                         loc('otsu.py'): [u'--show ',
        u'--show --image_id 5c1a898e-bb99-11e8-b2b9-ac1f6b6435d0 --image_set raw',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0',
        u'--show --image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0_blue',
        u'--show --help',
        u'--show'],
                         loc('segment.py'): [u'--show --channels red blue\n',
        u'--show --channels yellow blue\n',
        u'--show --channels green blue\n',
        u'--show --channels red blue gold\n',
        u'--show\n',
        u'--read history.txt\n',
        u'--show --keep_temp\n',
        u'--sample 2\n',
        u'--sample\n',
        u'--image_id 854657d2-bbaa-11e8-b2ba-ac1f6b6435d0 --show\n',
        u'--help\n',
        u'--sample 3',
        u'--show',
        u'--all'],
                         loc('segment2.py'): [u'--show --classes 2 6  --sample 10',
        u'--show --classes 2 6  --sample 2',
        u'--show --classes 2 6  --sample 2 --show',
        u'--show --classes 2 6  --sample 5',
        u'--show --classes 2 6',
        u'--show'],
                         loc('visualize.py'): [u'--image_set raw',
        u'--image_set raw image_id 000a6c98_bb9b_11e8_b2b9_ac1f6b6435d0',
        u"--image_set raw image_id '000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'",
        u'--image_set raw image_id 000a6c98-bb9b-11e8-b2b9-ac1f6b6435d0'],
                         loc('watershed.py'): [u'--n 100 --m 5 --show',
        u'--n 100 --m 2 --show',
        u'--n 100 -m 2 --show'],
                         loc('../learn/torch-nn.py'): [u'--n 2',
        u'--n 1 --show',
        u'--n 1']}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'zRuoo7lo1K5bGtfhUhOsW4cZwV'\
        '1Zxhqw',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [2],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(5,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {'codeline-mode': 'below'}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                      'CellSegmentator')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'),
                      'EXAMPLE_IMAGES')]},
        loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                             '__all__')]],
        'top-node': [('function def',
                      loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'),
                      'clear_frames')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'),
                      'ERRORS')]},
        loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/image.py'),
                      'AxesImage')]},
        loc('README.md'): {'expanded-nodes': [],
                           'selected-nodes': [],
                           'top-node': None},
        loc('analyze-labels.py'): {'expanded-nodes': [],
                                   'selected-nodes': [[('generic attribute',
        loc('analyze-labels.py'),
        'csvfile')]],
                                   'top-node': [('generic attribute',
        loc('analyze-labels.py'),
        'args')]},
        loc('encoder.py'): {'expanded-nodes': [],
                            'selected-nodes': [None],
                            'top-node': None},
        loc('ex.py'): {'expanded-nodes': [],
                       'selected-nodes': [],
                       'top-node': None},
        loc('image_seg.py'): {'expanded-nodes': [],
                              'selected-nodes': [[('generic attribute',
        loc('image_seg.py'),
        'info')]],
                              'top-node': [('generic attribute',
        loc('image_seg.py'),
        'dataset')]},
        loc('seg.py'): {'expanded-nodes': [],
                        'selected-nodes': [],
                        'top-node': [('generic attribute',
                                      loc('seg.py'),
                                      'cell_mask')]},
        loc('segment.py'): {'expanded-nodes': [],
                            'selected-nodes': [[('generic attribute',
        loc('segment.py'),
        'YELLOW')]],
                            'top-node': [('generic attribute',
        loc('segment.py'),
        'args')]},
        loc('submission.py'): {'expanded-nodes': [],
                               'selected-nodes': [],
                               'top-node': None},
        loc('visualize.py'): {'expanded-nodes': [],
                              'selected-nodes': [],
                              'top-node': [('generic attribute',
        loc('visualize.py'),
        'args')]},
        loc('../../astro/make_img.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../astro/make_img.py'),
                             'plot')]],
        'top-node': [('generic attribute',
                      loc('../../astro/make_img.py'),
                      'config_path')]},
        loc('../../astro/plot_points.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../astro/plot_points.py'),
                             'y3s')]],
        'top-node': [('generic attribute',
                      loc('../../astro/plot_points.py'),
                      'i')]},
        loc('../../bioinformatics/DBRU.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../bioinformatics/DBRU.py'),
                      'a')]},
        loc('../../bioinformatics/GREP.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/GREP.py'),
                      'count_kmers')]},
        loc('../../bioinformatics/PCOV.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/PCOV.py'),
                      'pcov')]},
        loc('../../bioinformatics/rosalind.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../bioinformatics/rosalind.py'),
                      'dbru')]},
        loc('../../dynamics/bacteria.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/bacteria.py'),
                      'bacteria')]},
        loc('../../dynamics/barnes_hut.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../dynamics/barnes_hut.py'),
                             'add')]],
        'top-node': [('function def',
                      loc('../../dynamics/barnes_hut.py'),
                      'add')]},
        loc('../../dynamics/chaos_book/hw1Rossler/README.md'): {'expanded-no'\
        'des': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                             'xSolution')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/chaos_book/hw1Rossler/RungeKutta.py'),
                      'Nt')]},
        loc('../../dynamics/lbmFlowAroundCylinder.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/lbmFlowAroundCylinder.py'),
                      'col1')]},
        loc('../../dynamics/lv.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': None},
        loc('../../dynamics/parityRule.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/parityRule.py'),
                      'i')]},
        loc('../../dynamics/strogatz/README.md'): {'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../dynamics/strogatz/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../dynamics/strogatz/strogatz_6_1.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../dynamics/strogatz_6_1.py'),
                      'eps')]},
        loc('../../dynamics/strogatz_6_5_19.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../dynamics/trafficLights.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../dynamics/trafficLights.py'),
                      'CAR')]}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [1,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'C/C++ Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'inod',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': True,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 40,
                                       'fReplaceText': u'colour2channel',
                                       'fReverse': False,
                                       'fSearchText': u'axs',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 157L,
                       'selection_end': 157L,
                       'selection_start': 157L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ('horizontal',
        1.0,
        ({'bookmarks': ([[loc('segment.py'),
                          {'attrib-starts': [],
                           'code-line': '#     axs\r\n',
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 122L,
                           'sel-line-start': 4039L,
                           'selection_end': 4047L,
                           'selection_start': 4045L,
                           'zoom': 0L},
                          1613946044.493],
                         [loc('segment.py'),
                          {'attrib-starts': [],
                           'code-line': '#     axs\r\n',
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 122L,
                           'sel-line-start': 4039L,
                           'selection_end': 4048L,
                           'selection_start': 4045L,
                           'zoom': 0L},
                          1613946051.855],
                         [loc('segment.py'),
                          {'attrib-starts': [('plot_hist|0|',
        125)],
                           'code-line': 'def plot_hist(n,bins,axs=None,title'\
        '=None,channel=BLUE):\r\n',
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 125L,
                           'sel-line-start': 4065L,
                           'selection_end': 4089L,
                           'selection_start': 4086L,
                           'zoom': 0L},
                          1613946052.056],
                         [loc('segment.py'),
                          {'attrib-starts': [('plot_hist|0|',
        125)],
                           'code-line': '    axs.bar((bins[:-1] + bins[1:]) '\
        '/ 2,\r\n',
                           'first-line': 110L,
                           'folded-linenos': [],
                           'sel-line': 126L,
                           'sel-line-start': 4122L,
                           'selection_end': 4129L,
                           'selection_start': 4126L,
                           'zoom': 0L},
                          1613946052.312],
                         [loc('segment.py'),
                          {'attrib-starts': [('plot_hist|0|',
        125)],
                           'code-line': '    axs.axes.xaxis.set_ticks([])\r'\
        '\n',
                           'first-line': 118L,
                           'folded-linenos': [],
                           'sel-line': 131L,
                           'sel-line-start': 4305L,
                           'selection_end': 4312L,
                           'selection_start': 4309L,
                           'zoom': 0L},
                          1613946052.528],
                         [loc('segment.py'),
                          {'attrib-starts': [('plot_hist|0|',
        125)],
                           'code-line': '    axs.axes.yaxis.set_ticks([])\r'\
        '\n',
                           'first-line': 118L,
                           'folded-linenos': [],
                           'sel-line': 132L,
                           'sel-line-start': 4339L,
                           'selection_end': 4346L,
                           'selection_start': 4343L,
                           'zoom': 0L},
                          1613946053.216],
                         [loc('segment.py'),
                          {'attrib-starts': [('plot_hist|0|',
        125)],
                           'code-line': '        axs.set_title(title)\r\n',
                           'first-line': 118L,
                           'folded-linenos': [],
                           'sel-line': 134L,
                           'sel-line-start': 4395L,
                           'selection_end': 4406L,
                           'selection_start': 4403L,
                           'zoom': 0L},
                          1613946053.767],
                         [loc('segment.py'),
                          {'attrib-starts': [('display_channel|0|',
        382)],
                           'code-line': '    fig      = figure(figsize=(20,2'\
        '0))\r\n',
                           'first-line': 377L,
                           'folded-linenos': [],
                           'sel-line': 396L,
                           'sel-line-start': 12571L,
                           'selection_end': 12644L,
                           'selection_start': 12572L,
                           'zoom': 0L},
                          1613946064.676],
                         [loc('segment2.py'),
                          {'attrib-starts': [],
                           'code-line': '\r\n',
                           'first-line': 166L,
                           'folded-linenos': [],
                           'sel-line': 187L,
                           'sel-line-start': 8366L,
                           'selection_end': 8366L,
                           'selection_start': 8366L,
                           'zoom': 0L},
                          1613946079.148],
                         [loc('segment.py'),
                          {'attrib-starts': [('display_channel|0|',
        382)],
                           'code-line': '    fig      = figure(figsize=(20,2'\
        '0))\r\n',
                           'first-line': 377L,
                           'folded-linenos': [],
                           'sel-line': 396L,
                           'sel-line-start': 12571L,
                           'selection_end': 12644L,
                           'selection_start': 12572L,
                           'zoom': 0L},
                          1613946082.103],
                         [loc('segment2.py'),
                          {'attrib-starts': [],
                           'code-line': '            ascii_mask = binary_mas'\
        'k_to_ascii(binary_mask,j)\r\n',
                           'first-line': 178L,
                           'folded-linenos': [],
                           'sel-line': 196L,
                           'sel-line-start': 8749L,
                           'selection_end': 8794L,
                           'selection_start': 8774L,
                           'zoom': 0L},
                          1613946480.779],
                         [loc('segment2.py'),
                          {'attrib-starts': [],
                           'code-line': '            img_cell = segment_imag'\
        'e(dstack((microtubule, endoplasmicrec, nuclei)),binary_mask,j)\r\n',
                           'first-line': 185L,
                           'folded-linenos': [],
                           'sel-line': 205L,
                           'sel-line-start': 9026L,
                           'selection_end': 9062L,
                           'selection_start': 9049L,
                           'zoom': 0L},
                          1613948390.806],
                         [loc('segment.py'),
                          {'attrib-starts': [('display_channel|0|',
        382)],
                           'code-line': '    fig      = figure(figsize=(20,2'\
        '0))\r\n',
                           'first-line': 377L,
                           'folded-linenos': [],
                           'sel-line': 396L,
                           'sel-line-start': 12571L,
                           'selection_end': 12644L,
                           'selection_start': 12572L,
                           'zoom': 0L},
                          1613948415.599],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/functions.py'),
                          {'attrib-starts': [('get_writer|0|',
        188)],
                           'code-line': '        raise ValueError(\n',
                           'first-line': 203L,
                           'folded-linenos': [],
                           'sel-line': 225L,
                           'sel-line-start': 7452L,
                           'selection_end': 7452L,
                           'selection_start': 7452L,
                           'zoom': 0L},
                          1613948417.041],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                          {'attrib-starts': [('label_cell|0|',
        82),
        ('label_cell|0|.__wsh|0|',
         104)],
                           'code-line': '        mask_img,\r\n',
                           'first-line': 80L,
                           'folded-linenos': [],
                           'sel-line': 105L,
                           'sel-line-start': 3780L,
                           'selection_end': 3797L,
                           'selection_start': 3797L,
                           'zoom': 0L},
                          1613948417.773],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                          {'attrib-starts': [('CellSegmentator|0|',
        18)],
                           'code-line': 'class CellSegmentator(object):\r\n',
                           'first-line': 142L,
                           'folded-linenos': [],
                           'sel-line': 18L,
                           'sel-line-start': 559L,
                           'selection_end': 580L,
                           'selection_start': 565L,
                           'zoom': 0L},
                          1613948490.324],
                         [loc('segment2.py'),
                          {'attrib-starts': [],
                           'code-line': "        with open(join(args.masks,b"\
        "asename(mt[i]).replace('red','full').replace('.png','')),'w') as bi"\
        "nary_mask_file:\r\n",
                           'first-line': 196L,
                           'folded-linenos': [],
                           'sel-line': 206L,
                           'sel-line-start': 9225L,
                           'selection_end': 9321L,
                           'selection_start': 9321L,
                           'zoom': 0L},
                          1613956808.688],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/format.py'),
                          {'attrib-starts': [('_write_array_header|0|',
        402)],
                           'code-line': '    fp.write(header)\r\n',
                           'first-line': 405L,
                           'folded-linenos': [],
                           'sel-line': 427L,
                           'sel-line-start': 15374L,
                           'selection_end': 15374L,
                           'selection_start': 15374L,
                           'zoom': 0L},
                          1613956818.105],
                         [loc('segment2.py'),
                          {'attrib-starts': [],
                           'code-line': '            save(binary_mask_file,b'\
        'inary_mask)\r\n',
                           'first-line': 196L,
                           'folded-linenos': [],
                           'sel-line': 207L,
                           'sel-line-start': 9344L,
                           'selection_end': 9344L,
                           'selection_start': 9344L,
                           'zoom': 0L},
                          1613956897.285],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/format.py'),
                          {'attrib-starts': [('_write_array_header|0|',
        402)],
                           'code-line': '    fp.write(header)\r\n',
                           'first-line': 405L,
                           'folded-linenos': [],
                           'sel-line': 427L,
                           'sel-line-start': 15374L,
                           'selection_end': 15374L,
                           'selection_start': 15374L,
                           'zoom': 0L},
                          1613956902.957]],
                        20),
          'current-loc': loc('segment2.py'),
          'editor-state-list': [(loc('segment2.py'),
                                 {'attrib-starts': [('segment_image|0|',
        95)],
                                  'code-line': '                img_cell[i]['\
        'j] = 0\r\n',
                                  'first-line': 217L,
                                  'folded-linenos': [],
                                  'sel-line': 99L,
                                  'sel-line-start': 4165L,
                                  'selection_end': 4198L,
                                  'selection_start': 4198L,
                                  'zoom': 0L})],
          'has-focus': True,
          'locked': False},
         [loc('segment2.py')]),
        ({'bookmarks': ([[loc('segment2.py'),
                          {'attrib-starts': [('segment_image|0|',
        89)],
                           'code-line': 'def segment_image(img_cell,binary_m'\
        'ask,class_id):\r\n',
                           'first-line': 78L,
                           'folded-linenos': [],
                           'sel-line': 89L,
                           'sel-line-start': 3840L,
                           'selection_end': 3857L,
                           'selection_start': 3844L,
                           'zoom': 0L},
                          1613948415.257],
                         [loc('segment.py'),
                          {'attrib-starts': [('display_channel|0|',
        382)],
                           'code-line': '    fig      = figure(figsize=(20,2'\
        '0))\r\n',
                           'first-line': 377L,
                           'folded-linenos': [],
                           'sel-line': 396L,
                           'sel-line-start': 12571L,
                           'selection_end': 12644L,
                           'selection_start': 12572L,
                           'zoom': 0L},
                          1613948415.668],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/functions.py'),
                          {'attrib-starts': [('get_writer|0|',
        188)],
                           'code-line': '        raise ValueError(\n',
                           'first-line': 203L,
                           'folded-linenos': [],
                           'sel-line': 225L,
                           'sel-line-start': 7452L,
                           'selection_end': 7452L,
                           'selection_start': 7452L,
                           'zoom': 0L},
                          1613948417.106],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'),
                          {'attrib-starts': [('label_cell|0|',
        82),
        ('label_cell|0|.__wsh|0|',
         104)],
                           'code-line': '        mask_img,\r\n',
                           'first-line': 80L,
                           'folded-linenos': [],
                           'sel-line': 105L,
                           'sel-line-start': 3780L,
                           'selection_end': 3797L,
                           'selection_start': 3797L,
                           'zoom': 0L},
                          1613948417.85],
                         [loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'),
                          {'attrib-starts': [('CellSegmentator|0|',
        18)],
                           'code-line': 'class CellSegmentator(object):\r\n',
                           'first-line': 142L,
                           'folded-linenos': [],
                           'sel-line': 18L,
                           'sel-line-start': 559L,
                           'selection_end': 580L,
                           'selection_start': 565L,
                           'zoom': 0L},
                          1613948418.517]],
                        5),
          'current-loc': loc('segment2.py'),
          'editor-state-list': [(loc('segment2.py'),
                                 {'attrib-starts': [('segment_image|0|',
        95)],
                                  'code-line': 'def segment_image(img_cell,b'\
        'inary_mask,class_id):\r\n',
                                  'first-line': 80L,
                                  'folded-linenos': [],
                                  'sel-line': 95L,
                                  'sel-line-start': 3988L,
                                  'selection_end': 4005L,
                                  'selection_start': 3992L,
                                  'zoom': 0L})],
          'has-focus': False,
          'locked': False},
         [loc('segment2.py')])),
                               'open_files': [u'segment2.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((1,
                           0),
                          1613957046.597),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    2),
                                   1613956823.615),
                 'user_data': {}},
        'window-alloc': (7,
                         -8,
                         1362,
                         732)}]}
guimgr.recent-documents = [loc('segment2.py')]
guimgr.visual-state = {loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/api/kaggle_api_extended.py'): {'a'\
        'ttrib-starts': [('KaggleApi|0|',
                          83),
                         ('KaggleApi|0|.authenticate|0|',
                          145)],
        'code-line': "                raise IOError('Could not find {}. Make"\
                     " sure it\\'s located in'\r\n",
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 163L,
        'sel-line-start': 6179L,
        'selection_end': 6179L,
        'selection_start': 6179L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/site-packages/kaggle/rest.py'): {'a'\
        'ttrib-starts': [('RESTClientObject|0|',
                          68),
                         ('RESTClientObject|0|.request|0|',
                          123)],
        'code-line': '            raise ApiException(http_resp=r)\r\n',
        'first-line': 221L,
        'folded-linenos': [],
        'sel-line': 240L,
        'sel-line-start': 9657L,
        'selection_end': 9657L,
        'selection_start': 9657L,
        'zoom': 0L},
                       loc('../../AppData/Local/Programs/Python/Python38/Lib/zipfile.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1252),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1336)],
        'code-line': "            raise ValueError('unknown action \"%s\"' %"\
                     " (action_class,))\r\n",
        'first-line': 1347L,
        'folded-linenos': [],
        'sel-line': 1366L,
        'sel-line-start': 49628L,
        'selection_end': 49628L,
        'selection_start': 49628L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/inspect.py'): {'a'\
        'ttrib-starts': [('Signature|0|',
                          2729),
                         ('Signature|0|._bind|0|',
                          2888)],
        'code-line': '                        raise TypeError(\r\n',
        'first-line': 2944L,
        'folded-linenos': [],
        'sel-line': 2963L,
        'sel-line-start': 113758L,
        'selection_end': 113758L,
        'selection_start': 113758L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/PIL/ImageFile.py'): {'a'\
        'ttrib-starts': [('ImageFile|0|',
                          76),
                         ('ImageFile|0|.__init__|0|',
                          79)],
        'code-line': '            self.fp = open(fp, "rb")\n',
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 94L,
        'sel-line-start': 2228L,
        'selection_end': 2228L,
        'selection_start': 2228L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/cellsegmentator.py'): {'a'\
        'ttrib-starts': [('CellSegmentator|0|',
                          18)],
        'code-line': 'class CellSegmentator(object):\r\n',
        'first-line': 142L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 559L,
        'selection_end': 580L,
        'selection_start': 565L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/hpacellseg/utils.py'): {'a'\
        'ttrib-starts': [('label_cell|0|',
                          82),
                         ('label_cell|0|.__wsh|0|',
                          104)],
        'code-line': '        mask_img,\r\n',
        'first-line': 80L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 3780L,
        'selection_end': 3797L,
        'selection_start': 3797L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/functions.py'): {'a'\
        'ttrib-starts': [('get_writer|0|',
                          188)],
        'code-line': '        raise ValueError(\n',
        'first-line': 203L,
        'folded-linenos': [],
        'sel-line': 225L,
        'sel-line-start': 7452L,
        'selection_end': 7452L,
        'selection_start': 7452L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/imageio/core/request.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from ..core import urlopen, get_remote_file\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 299L,
        'selection_end': 299L,
        'selection_start': 299L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/matplotlib/pyplot.py'): {'a'\
        'ttrib-starts': [('figure|0|',
                          554)],
        'code-line': '        num = int(num)  # crude validation of num argu'\
                     'ment\r\n',
        'first-line': 645L,
        'folded-linenos': [],
        'sel-line': 667L,
        'sel-line-start': 22235L,
        'selection_end': 22235L,
        'selection_start': 22235L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/numpy/lib/format.py'): {'a'\
        'ttrib-starts': [('_write_array_header|0|',
                          402)],
        'code-line': '    fp.write(header)\r\n',
        'first-line': 405L,
        'folded-linenos': [],
        'sel-line': 427L,
        'sel-line-start': 15374L,
        'selection_end': 15374L,
        'selection_start': 15374L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/pycocotools/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': "__author__ = 'tylin'\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/site-packages/scipy/ndimage/filters.py'): {'a'\
        'ttrib-starts': [('_min_or_max_filter|0|',
                          1078)],
        'code-line': "            raise RuntimeError('footprint array has in"\
                     "correct shape.')\n",
        'first-line': 1111L,
        'folded-linenos': [],
        'sel-line': 1133L,
        'sel-line-start': 38841L,
        'selection_end': 38841L,
        'selection_start': 38841L,
        'zoom': 0L},
                       loc('../AppData/Local/Programs/Python/Python38/Lib/traceback.py'): {'a'\
        'ttrib-starts': [('StackSummary|0|',
                          317),
                         ('StackSummary|0|.extract|0|',
                          321)],
        'code-line': "            limit = getattr(sys, 'tracebacklimit', Non"\
                     "e)\r\n",
        'first-line': 313L,
        'folded-linenos': [],
        'sel-line': 335L,
        'sel-line-start': 12459L,
        'selection_end': 12459L,
        'selection_start': 12459L,
        'zoom': 0L},
                       loc('../AppData/Local/Wing Personal 7/pi-cache/3.8/C/Users/Weka/AppData/Local/Programs/Python/Python38/Lib/site-packages/pycocotools/_mask.pi'): {'a'\
        'ttrib-starts': [('encode|0|',
                          36)],
        'code-line': 'def encode():\n',
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 524L,
        'selection_end': 534L,
        'selection_start': 528L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/PIL/ImageFile.py'): {'a'\
        'ttrib-starts': [('ImageFile|0|',
                          86),
                         ('ImageFile|0|.__init__|0|',
                          89)],
        'code-line': '            self.fp = open(fp, "rb")\n',
        'first-line': 85L,
        'folded-linenos': [],
        'sel-line': 104L,
        'sel-line-start': 2471L,
        'selection_end': 2471L,
        'selection_start': 2471L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '"""\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/artist.py'): {'a'\
        'ttrib-starts': [('Artist|0|',
                          59),
                         ('Artist|0|.update|0|',
                          971)],
        'code-line': '                        raise AttributeError(f"{type(s'\
                     'elf).__name__!r} object "\n',
        'first-line': 976L,
        'folded-linenos': [],
        'sel-line': 995L,
        'sel-line-start': 32162L,
        'selection_end': 32162L,
        'selection_start': 32162L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/__init__.py'): {'a'\
        'ttrib-starts': [('_reshape_2D|0|',
                          1332)],
        'code-line': "            raise ValueError(f'{name} must have 2 or f"\
                     "ewer dimensions')\n",
        'first-line': 1351L,
        'folded-linenos': [],
        'sel-line': 1356L,
        'sel-line-start': 44072L,
        'selection_end': 44072L,
        'selection_start': 44072L,
        'zoom': 0L},
                       loc('../AppData/Roaming/Python/Python38/site-packages/matplotlib/cbook/deprecation.py'): {'a'\
        'ttrib-starts': [('_make_keyword_only|0|',
                          415),
                         ('_make_keyword_only|0|.wrapper|0|',
                          439)],
        'code-line': '        return func(*args, **kwargs)\n',
        'first-line': 431L,
        'folded-linenos': [],
        'sel-line': 450L,
        'sel-line-start': 17289L,
        'selection_end': 17289L,
        'selection_start': 17289L,
        'zoom': 0L},
                       loc('../bioinformatics/mgap.py'): {'attrib-starts': [],
        'code-line': '    elapsed = time.time() - start\r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3997L,
        'selection_end': 4155L,
        'selection_start': 3997L,
        'zoom': 0L},
                       loc('CellSegmentatorTest.py'): {'attrib-starts': [],
        'code-line': '# snarfed from https://www.kaggle.com/lnhtrang/hpa-pub'\
                     'lic-data-download-and-hpacellseg\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 86L,
        'selection_start': 15L,
        'zoom': 0L},
                       loc('README.markdown'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'code-line': '|encoding.py|Example of encoding|\r\n',
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 417L,
        'selection_end': 449L,
        'selection_start': 449L,
        'zoom': 0L},
                       loc('descrptions.csv'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('download.py'): {'attrib-starts': [],
        'code-line': 'import os \r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 819L,
        'selection_end': 829L,
        'selection_start': 829L,
        'zoom': 0L},
                       loc('encoder.py'): {'attrib-starts': [],
        'code-line': 'from pycocotools import _mask as coco_mask\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 35L,
        'selection_end': 77L,
        'selection_start': 68L,
        'zoom': 0L},
                       loc('encoding.py'): {'attrib-starts': [],
        'code-line': 'from pycocotools import _mask as coco_mask\r\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 122L,
        'selection_end': 197L,
        'selection_start': 122L,
        'zoom': 0L},
                       loc('ex.py'): {'attrib-starts': [],
                                      'code-line': '',
                                      'first-line': 0L,
                                      'folded-linenos': [],
                                      'sel-line': 0L,
                                      'sel-line-start': 0L,
                                      'selection_end': 0L,
                                      'selection_start': 0L,
                                      'zoom': 0L},
                       loc('image_seg.py'): {'attrib-starts': [],
        'code-line': "train = dataset['train'].map(load_image_train)#, num_p"\
                     "arallel_calls=tf.data.AUTOTUNE)\r\n",
        'first-line': 45L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1373L,
        'selection_end': 1441L,
        'selection_start': 1441L,
        'zoom': 0L},
                       loc('otsu.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('seg.py'): {'attrib-starts': [],
                                       'code-line': 'segmentator = cellsegme'\
        'ntator.CellSegmentator(\r\n',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 13L,
                                       'sel-line-start': 506L,
                                       'selection_end': 551L,
                                       'selection_start': 536L,
                                       'zoom': 0L},
                       loc('segment.py'): {'attrib-starts': [('display_chann'\
        'el|0|',
        382)],
        'code-line': '    fig      = figure(figsize=(20,20))\r\n',
        'first-line': 377L,
        'folded-linenos': [],
        'sel-line': 396L,
        'sel-line-start': 12571L,
        'selection_end': 12644L,
        'selection_start': 12572L,
        'zoom': 0L},
                       loc('segment2.py'): {'attrib-starts': [('segment_imag'\
        'e|0|',
        89)],
        'code-line': 'def segment_image(img_cell,binary_mask,class_id):\r\n',
        'first-line': 78L,
        'folded-linenos': [],
        'sel-line': 89L,
        'sel-line-start': 3840L,
        'selection_end': 3857L,
        'selection_start': 3844L,
        'zoom': 0L},
                       loc('segmentation.py'): {'attrib-starts': [],
        'code-line': "    axs[0,1].scatter(y, x, s=100, c='red', marker='+')"\
                     "\r\n",
        'first-line': 106L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4338L,
        'selection_end': 4370L,
        'selection_start': 4370L,
        'zoom': 0L},
                       loc('som.py'): {'attrib-starts': [],
                                       'code-line': '',
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 5L,
                                       'sel-line-start': 96L,
                                       'selection_end': 96L,
                                       'selection_start': 96L,
                                       'zoom': 0L},
                       loc('submission.py'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('summarize.py'): {'attrib-starts': [('read_traini'\
        'ng_expectations|0|',
        45)],
        'code-line': '\r\n',
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 1836L,
        'selection_end': 1836L,
        'selection_start': 1836L,
        'zoom': 0L},
                       loc('tt.py'): {'attrib-starts': [],
                                      'code-line': '\r\n',
                                      'first-line': 84L,
                                      'folded-linenos': [],
                                      'sel-line': 8L,
                                      'sel-line-start': 217L,
                                      'selection_end': 217L,
                                      'selection_start': 217L,
                                      'zoom': 0L},
                       loc('unzip.py'): {'attrib-starts': [],
        'code-line': '#  To contact me, Simon Crase, email simon@greenweaves'\
                     '.nz\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 743L,
        'selection_end': 746L,
        'selection_start': 746L,
        'zoom': 0L},
                       loc('visualize.py'): {'attrib-starts': [],
        'code-line': '    for i in range(3):\r\n',
        'first-line': 110L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 3923L,
        'selection_end': 3924L,
        'selection_start': 3924L,
        'zoom': 0L},
                       loc('watershed.py'): {'attrib-starts': [],
        'code-line': '#   Copyright (C) 2021 Greenweaves Software Limited\r'\
                     '\n',
        'first-line': 121L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../learn/torch-nn.py'): {'attrib-starts': [('tra'\
        'in|0|',
        36)],
        'code-line': '    plt.plot(losses)\r\n',
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 87L,
        'sel-line-start': 3075L,
        'selection_end': 3088L,
        'selection_start': 3088L,
        'zoom': 0L},
                       loc('../../bioinformatics/osym.py'): {'attrib-starts': [],
        'code-line': '#   the Free Software Foundation, either version 3 of '\
                     'the License, or\r\n',
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 208L,
        'selection_end': 277L,
        'selection_start': 277L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.pyexec = {None: ('custom',
                      u'c:\\Users\\Weka\\AppData\\Local\\Programs\\Python\\Python38\\python.exe')}
search.replace-history = [u'colour2channel',
                          u'point',
                          u'DESCRIPTIONS',
                          u'COLOUR_NAMES',
                          u'colours',
                          u'IMAGE_LEVEL_LABELS',
                          u'NRGB',
                          u'NCHANNELS',
                          u'segment_channel',
                          u'channel',
                          u'intensity',
                          u'Intensities',
                          u'Component',
                          u'get8components',
                          u'component_file',
                          u'cluster',
                          u'get_contours']
search.search-history = [u'axs',
                         u't.',
                         u'zlib',
                         u'base64',
                         u'join',
                         u'get_channel',
                         u'create_selection',
                         u'tt',
                         u'Descriptions',
                         u'colours',
                         u'meanings',
                         u'labels',
                         u'label',
                         u'3',
                         u'4',
                         u'segment1',
                         u'index',
                         u'BLUE',
                         u'blue',
                         u'Blues']
